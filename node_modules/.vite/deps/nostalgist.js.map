{
  "version": 3,
  "sources": ["../../nostalgist/dist/nostalgist.js"],
  "sourcesContent": ["const systemCoreMap = {\n  gb: \"mgba\",\n  gba: \"mgba\",\n  gbc: \"mgba\",\n  megadrive: \"genesis_plus_gx\",\n  nes: \"fceumm\",\n  snes: \"snes9x\"\n};\nfunction getDefaultExportFromCjs(x) {\n  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, \"default\") ? x[\"default\"] : x;\n}\nvar ini$3;\nvar hasRequiredIni;\nfunction requireIni() {\n  if (hasRequiredIni) return ini$3;\n  hasRequiredIni = 1;\n  const { hasOwnProperty } = Object.prototype;\n  const encode = (obj, opt = {}) => {\n    if (typeof opt === \"string\") {\n      opt = { section: opt };\n    }\n    opt.align = opt.align === true;\n    opt.newline = opt.newline === true;\n    opt.sort = opt.sort === true;\n    opt.whitespace = opt.whitespace === true || opt.align === true;\n    opt.platform = opt.platform || typeof process !== \"undefined\" && process.platform;\n    opt.bracketedArray = opt.bracketedArray !== false;\n    const eol = opt.platform === \"win32\" ? \"\\r\\n\" : \"\\n\";\n    const separator = opt.whitespace ? \" = \" : \"=\";\n    const children = [];\n    const keys = opt.sort ? Object.keys(obj).sort() : Object.keys(obj);\n    let padToChars = 0;\n    if (opt.align) {\n      padToChars = safe(\n        keys.filter((k) => obj[k] === null || Array.isArray(obj[k]) || typeof obj[k] !== \"object\").map((k) => Array.isArray(obj[k]) ? `${k}[]` : k).concat([\"\"]).reduce((a, b) => safe(a).length >= safe(b).length ? a : b)\n      ).length;\n    }\n    let out = \"\";\n    const arraySuffix = opt.bracketedArray ? \"[]\" : \"\";\n    for (const k of keys) {\n      const val = obj[k];\n      if (val && Array.isArray(val)) {\n        for (const item of val) {\n          out += safe(`${k}${arraySuffix}`).padEnd(padToChars, \" \") + separator + safe(item) + eol;\n        }\n      } else if (val && typeof val === \"object\") {\n        children.push(k);\n      } else {\n        out += safe(k).padEnd(padToChars, \" \") + separator + safe(val) + eol;\n      }\n    }\n    if (opt.section && out.length) {\n      out = \"[\" + safe(opt.section) + \"]\" + (opt.newline ? eol + eol : eol) + out;\n    }\n    for (const k of children) {\n      const nk = splitSections(k, \".\").join(\"\\\\.\");\n      const section = (opt.section ? opt.section + \".\" : \"\") + nk;\n      const child = encode(obj[k], {\n        ...opt,\n        section\n      });\n      if (out.length && child.length) {\n        out += eol;\n      }\n      out += child;\n    }\n    return out;\n  };\n  function splitSections(str, separator) {\n    var lastMatchIndex = 0;\n    var lastSeparatorIndex = 0;\n    var nextIndex = 0;\n    var sections = [];\n    do {\n      nextIndex = str.indexOf(separator, lastMatchIndex);\n      if (nextIndex !== -1) {\n        lastMatchIndex = nextIndex + separator.length;\n        if (nextIndex > 0 && str[nextIndex - 1] === \"\\\\\") {\n          continue;\n        }\n        sections.push(str.slice(lastSeparatorIndex, nextIndex));\n        lastSeparatorIndex = nextIndex + separator.length;\n      }\n    } while (nextIndex !== -1);\n    sections.push(str.slice(lastSeparatorIndex));\n    return sections;\n  }\n  const decode = (str, opt = {}) => {\n    opt.bracketedArray = opt.bracketedArray !== false;\n    const out = /* @__PURE__ */ Object.create(null);\n    let p = out;\n    let section = null;\n    const re = /^\\[([^\\]]*)\\]\\s*$|^([^=]+)(=(.*))?$/i;\n    const lines = str.split(/[\\r\\n]+/g);\n    const duplicates = {};\n    for (const line of lines) {\n      if (!line || line.match(/^\\s*[;#]/) || line.match(/^\\s*$/)) {\n        continue;\n      }\n      const match = line.match(re);\n      if (!match) {\n        continue;\n      }\n      if (match[1] !== void 0) {\n        section = unsafe(match[1]);\n        if (section === \"__proto__\") {\n          p = /* @__PURE__ */ Object.create(null);\n          continue;\n        }\n        p = out[section] = out[section] || /* @__PURE__ */ Object.create(null);\n        continue;\n      }\n      const keyRaw = unsafe(match[2]);\n      let isArray;\n      if (opt.bracketedArray) {\n        isArray = keyRaw.length > 2 && keyRaw.slice(-2) === \"[]\";\n      } else {\n        duplicates[keyRaw] = (duplicates?.[keyRaw] || 0) + 1;\n        isArray = duplicates[keyRaw] > 1;\n      }\n      const key = isArray && keyRaw.endsWith(\"[]\") ? keyRaw.slice(0, -2) : keyRaw;\n      if (key === \"__proto__\") {\n        continue;\n      }\n      const valueRaw = match[3] ? unsafe(match[4]) : true;\n      const value = valueRaw === \"true\" || valueRaw === \"false\" || valueRaw === \"null\" ? JSON.parse(valueRaw) : valueRaw;\n      if (isArray) {\n        if (!hasOwnProperty.call(p, key)) {\n          p[key] = [];\n        } else if (!Array.isArray(p[key])) {\n          p[key] = [p[key]];\n        }\n      }\n      if (Array.isArray(p[key])) {\n        p[key].push(value);\n      } else {\n        p[key] = value;\n      }\n    }\n    const remove = [];\n    for (const k of Object.keys(out)) {\n      if (!hasOwnProperty.call(out, k) || typeof out[k] !== \"object\" || Array.isArray(out[k])) {\n        continue;\n      }\n      const parts = splitSections(k, \".\");\n      p = out;\n      const l = parts.pop();\n      const nl = l.replace(/\\\\\\./g, \".\");\n      for (const part of parts) {\n        if (part === \"__proto__\") {\n          continue;\n        }\n        if (!hasOwnProperty.call(p, part) || typeof p[part] !== \"object\") {\n          p[part] = /* @__PURE__ */ Object.create(null);\n        }\n        p = p[part];\n      }\n      if (p === out && nl === l) {\n        continue;\n      }\n      p[nl] = out[k];\n      remove.push(k);\n    }\n    for (const del of remove) {\n      delete out[del];\n    }\n    return out;\n  };\n  const isQuoted = (val) => {\n    return val.startsWith('\"') && val.endsWith('\"') || val.startsWith(\"'\") && val.endsWith(\"'\");\n  };\n  const safe = (val) => {\n    if (typeof val !== \"string\" || val.match(/[=\\r\\n]/) || val.match(/^\\[/) || val.length > 1 && isQuoted(val) || val !== val.trim()) {\n      return JSON.stringify(val);\n    }\n    return val.split(\";\").join(\"\\\\;\").split(\"#\").join(\"\\\\#\");\n  };\n  const unsafe = (val) => {\n    val = (val || \"\").trim();\n    if (isQuoted(val)) {\n      if (val.charAt(0) === \"'\") {\n        val = val.slice(1, -1);\n      }\n      try {\n        val = JSON.parse(val);\n      } catch {\n      }\n    } else {\n      let esc = false;\n      let unesc = \"\";\n      for (let i2 = 0, l = val.length; i2 < l; i2++) {\n        const c = val.charAt(i2);\n        if (esc) {\n          if (\"\\\\;#\".indexOf(c) !== -1) {\n            unesc += c;\n          } else {\n            unesc += \"\\\\\" + c;\n          }\n          esc = false;\n        } else if (\";#\".indexOf(c) !== -1) {\n          break;\n        } else if (c === \"\\\\\") {\n          esc = true;\n        } else {\n          unesc += c;\n        }\n      }\n      if (esc) {\n        unesc += \"\\\\\";\n      }\n      return unesc.trim();\n    }\n    return val;\n  };\n  ini$3 = {\n    parse: decode,\n    decode,\n    stringify: encode,\n    encode,\n    safe,\n    unsafe\n  };\n  return ini$3;\n}\nvar iniExports = requireIni();\nconst ini$2 = /* @__PURE__ */ getDefaultExportFromCjs(iniExports);\nvar pathBrowserify;\nvar hasRequiredPathBrowserify;\nfunction requirePathBrowserify() {\n  if (hasRequiredPathBrowserify) return pathBrowserify;\n  hasRequiredPathBrowserify = 1;\n  function assertPath(path2) {\n    if (typeof path2 !== \"string\") {\n      throw new TypeError(\"Path must be a string. Received \" + JSON.stringify(path2));\n    }\n  }\n  function normalizeStringPosix(path2, allowAboveRoot) {\n    var res = \"\";\n    var lastSegmentLength = 0;\n    var lastSlash = -1;\n    var dots = 0;\n    var code;\n    for (var i2 = 0; i2 <= path2.length; ++i2) {\n      if (i2 < path2.length)\n        code = path2.charCodeAt(i2);\n      else if (code === 47)\n        break;\n      else\n        code = 47;\n      if (code === 47) {\n        if (lastSlash === i2 - 1 || dots === 1) ;\n        else if (lastSlash !== i2 - 1 && dots === 2) {\n          if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 || res.charCodeAt(res.length - 2) !== 46) {\n            if (res.length > 2) {\n              var lastSlashIndex = res.lastIndexOf(\"/\");\n              if (lastSlashIndex !== res.length - 1) {\n                if (lastSlashIndex === -1) {\n                  res = \"\";\n                  lastSegmentLength = 0;\n                } else {\n                  res = res.slice(0, lastSlashIndex);\n                  lastSegmentLength = res.length - 1 - res.lastIndexOf(\"/\");\n                }\n                lastSlash = i2;\n                dots = 0;\n                continue;\n              }\n            } else if (res.length === 2 || res.length === 1) {\n              res = \"\";\n              lastSegmentLength = 0;\n              lastSlash = i2;\n              dots = 0;\n              continue;\n            }\n          }\n          if (allowAboveRoot) {\n            if (res.length > 0)\n              res += \"/..\";\n            else\n              res = \"..\";\n            lastSegmentLength = 2;\n          }\n        } else {\n          if (res.length > 0)\n            res += \"/\" + path2.slice(lastSlash + 1, i2);\n          else\n            res = path2.slice(lastSlash + 1, i2);\n          lastSegmentLength = i2 - lastSlash - 1;\n        }\n        lastSlash = i2;\n        dots = 0;\n      } else if (code === 46 && dots !== -1) {\n        ++dots;\n      } else {\n        dots = -1;\n      }\n    }\n    return res;\n  }\n  function _format(sep, pathObject) {\n    var dir = pathObject.dir || pathObject.root;\n    var base = pathObject.base || (pathObject.name || \"\") + (pathObject.ext || \"\");\n    if (!dir) {\n      return base;\n    }\n    if (dir === pathObject.root) {\n      return dir + base;\n    }\n    return dir + sep + base;\n  }\n  var posix = {\n    // path.resolve([from ...], to)\n    resolve: function resolve() {\n      var resolvedPath = \"\";\n      var resolvedAbsolute = false;\n      var cwd;\n      for (var i2 = arguments.length - 1; i2 >= -1 && !resolvedAbsolute; i2--) {\n        var path2;\n        if (i2 >= 0)\n          path2 = arguments[i2];\n        else {\n          if (cwd === void 0)\n            cwd = process.cwd();\n          path2 = cwd;\n        }\n        assertPath(path2);\n        if (path2.length === 0) {\n          continue;\n        }\n        resolvedPath = path2 + \"/\" + resolvedPath;\n        resolvedAbsolute = path2.charCodeAt(0) === 47;\n      }\n      resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n      if (resolvedAbsolute) {\n        if (resolvedPath.length > 0)\n          return \"/\" + resolvedPath;\n        else\n          return \"/\";\n      } else if (resolvedPath.length > 0) {\n        return resolvedPath;\n      } else {\n        return \".\";\n      }\n    },\n    normalize: function normalize(path2) {\n      assertPath(path2);\n      if (path2.length === 0) return \".\";\n      var isAbsolute = path2.charCodeAt(0) === 47;\n      var trailingSeparator = path2.charCodeAt(path2.length - 1) === 47;\n      path2 = normalizeStringPosix(path2, !isAbsolute);\n      if (path2.length === 0 && !isAbsolute) path2 = \".\";\n      if (path2.length > 0 && trailingSeparator) path2 += \"/\";\n      if (isAbsolute) return \"/\" + path2;\n      return path2;\n    },\n    isAbsolute: function isAbsolute(path2) {\n      assertPath(path2);\n      return path2.length > 0 && path2.charCodeAt(0) === 47;\n    },\n    join: function join() {\n      if (arguments.length === 0)\n        return \".\";\n      var joined;\n      for (var i2 = 0; i2 < arguments.length; ++i2) {\n        var arg = arguments[i2];\n        assertPath(arg);\n        if (arg.length > 0) {\n          if (joined === void 0)\n            joined = arg;\n          else\n            joined += \"/\" + arg;\n        }\n      }\n      if (joined === void 0)\n        return \".\";\n      return posix.normalize(joined);\n    },\n    relative: function relative(from, to) {\n      assertPath(from);\n      assertPath(to);\n      if (from === to) return \"\";\n      from = posix.resolve(from);\n      to = posix.resolve(to);\n      if (from === to) return \"\";\n      var fromStart = 1;\n      for (; fromStart < from.length; ++fromStart) {\n        if (from.charCodeAt(fromStart) !== 47)\n          break;\n      }\n      var fromEnd = from.length;\n      var fromLen = fromEnd - fromStart;\n      var toStart = 1;\n      for (; toStart < to.length; ++toStart) {\n        if (to.charCodeAt(toStart) !== 47)\n          break;\n      }\n      var toEnd = to.length;\n      var toLen = toEnd - toStart;\n      var length = fromLen < toLen ? fromLen : toLen;\n      var lastCommonSep = -1;\n      var i2 = 0;\n      for (; i2 <= length; ++i2) {\n        if (i2 === length) {\n          if (toLen > length) {\n            if (to.charCodeAt(toStart + i2) === 47) {\n              return to.slice(toStart + i2 + 1);\n            } else if (i2 === 0) {\n              return to.slice(toStart + i2);\n            }\n          } else if (fromLen > length) {\n            if (from.charCodeAt(fromStart + i2) === 47) {\n              lastCommonSep = i2;\n            } else if (i2 === 0) {\n              lastCommonSep = 0;\n            }\n          }\n          break;\n        }\n        var fromCode = from.charCodeAt(fromStart + i2);\n        var toCode = to.charCodeAt(toStart + i2);\n        if (fromCode !== toCode)\n          break;\n        else if (fromCode === 47)\n          lastCommonSep = i2;\n      }\n      var out = \"\";\n      for (i2 = fromStart + lastCommonSep + 1; i2 <= fromEnd; ++i2) {\n        if (i2 === fromEnd || from.charCodeAt(i2) === 47) {\n          if (out.length === 0)\n            out += \"..\";\n          else\n            out += \"/..\";\n        }\n      }\n      if (out.length > 0)\n        return out + to.slice(toStart + lastCommonSep);\n      else {\n        toStart += lastCommonSep;\n        if (to.charCodeAt(toStart) === 47)\n          ++toStart;\n        return to.slice(toStart);\n      }\n    },\n    _makeLong: function _makeLong(path2) {\n      return path2;\n    },\n    dirname: function dirname(path2) {\n      assertPath(path2);\n      if (path2.length === 0) return \".\";\n      var code = path2.charCodeAt(0);\n      var hasRoot = code === 47;\n      var end = -1;\n      var matchedSlash = true;\n      for (var i2 = path2.length - 1; i2 >= 1; --i2) {\n        code = path2.charCodeAt(i2);\n        if (code === 47) {\n          if (!matchedSlash) {\n            end = i2;\n            break;\n          }\n        } else {\n          matchedSlash = false;\n        }\n      }\n      if (end === -1) return hasRoot ? \"/\" : \".\";\n      if (hasRoot && end === 1) return \"//\";\n      return path2.slice(0, end);\n    },\n    basename: function basename(path2, ext) {\n      if (ext !== void 0 && typeof ext !== \"string\") throw new TypeError('\"ext\" argument must be a string');\n      assertPath(path2);\n      var start = 0;\n      var end = -1;\n      var matchedSlash = true;\n      var i2;\n      if (ext !== void 0 && ext.length > 0 && ext.length <= path2.length) {\n        if (ext.length === path2.length && ext === path2) return \"\";\n        var extIdx = ext.length - 1;\n        var firstNonSlashEnd = -1;\n        for (i2 = path2.length - 1; i2 >= 0; --i2) {\n          var code = path2.charCodeAt(i2);\n          if (code === 47) {\n            if (!matchedSlash) {\n              start = i2 + 1;\n              break;\n            }\n          } else {\n            if (firstNonSlashEnd === -1) {\n              matchedSlash = false;\n              firstNonSlashEnd = i2 + 1;\n            }\n            if (extIdx >= 0) {\n              if (code === ext.charCodeAt(extIdx)) {\n                if (--extIdx === -1) {\n                  end = i2;\n                }\n              } else {\n                extIdx = -1;\n                end = firstNonSlashEnd;\n              }\n            }\n          }\n        }\n        if (start === end) end = firstNonSlashEnd;\n        else if (end === -1) end = path2.length;\n        return path2.slice(start, end);\n      } else {\n        for (i2 = path2.length - 1; i2 >= 0; --i2) {\n          if (path2.charCodeAt(i2) === 47) {\n            if (!matchedSlash) {\n              start = i2 + 1;\n              break;\n            }\n          } else if (end === -1) {\n            matchedSlash = false;\n            end = i2 + 1;\n          }\n        }\n        if (end === -1) return \"\";\n        return path2.slice(start, end);\n      }\n    },\n    extname: function extname(path2) {\n      assertPath(path2);\n      var startDot = -1;\n      var startPart = 0;\n      var end = -1;\n      var matchedSlash = true;\n      var preDotState = 0;\n      for (var i2 = path2.length - 1; i2 >= 0; --i2) {\n        var code = path2.charCodeAt(i2);\n        if (code === 47) {\n          if (!matchedSlash) {\n            startPart = i2 + 1;\n            break;\n          }\n          continue;\n        }\n        if (end === -1) {\n          matchedSlash = false;\n          end = i2 + 1;\n        }\n        if (code === 46) {\n          if (startDot === -1)\n            startDot = i2;\n          else if (preDotState !== 1)\n            preDotState = 1;\n        } else if (startDot !== -1) {\n          preDotState = -1;\n        }\n      }\n      if (startDot === -1 || end === -1 || // We saw a non-dot character immediately before the dot\n      preDotState === 0 || // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n        return \"\";\n      }\n      return path2.slice(startDot, end);\n    },\n    format: function format(pathObject) {\n      if (pathObject === null || typeof pathObject !== \"object\") {\n        throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n      }\n      return _format(\"/\", pathObject);\n    },\n    parse: function parse(path2) {\n      assertPath(path2);\n      var ret = { root: \"\", dir: \"\", base: \"\", ext: \"\", name: \"\" };\n      if (path2.length === 0) return ret;\n      var code = path2.charCodeAt(0);\n      var isAbsolute = code === 47;\n      var start;\n      if (isAbsolute) {\n        ret.root = \"/\";\n        start = 1;\n      } else {\n        start = 0;\n      }\n      var startDot = -1;\n      var startPart = 0;\n      var end = -1;\n      var matchedSlash = true;\n      var i2 = path2.length - 1;\n      var preDotState = 0;\n      for (; i2 >= start; --i2) {\n        code = path2.charCodeAt(i2);\n        if (code === 47) {\n          if (!matchedSlash) {\n            startPart = i2 + 1;\n            break;\n          }\n          continue;\n        }\n        if (end === -1) {\n          matchedSlash = false;\n          end = i2 + 1;\n        }\n        if (code === 46) {\n          if (startDot === -1) startDot = i2;\n          else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n          preDotState = -1;\n        }\n      }\n      if (startDot === -1 || end === -1 || // We saw a non-dot character immediately before the dot\n      preDotState === 0 || // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n        if (end !== -1) {\n          if (startPart === 0 && isAbsolute) ret.base = ret.name = path2.slice(1, end);\n          else ret.base = ret.name = path2.slice(startPart, end);\n        }\n      } else {\n        if (startPart === 0 && isAbsolute) {\n          ret.name = path2.slice(1, startDot);\n          ret.base = path2.slice(1, end);\n        } else {\n          ret.name = path2.slice(startPart, startDot);\n          ret.base = path2.slice(startPart, end);\n        }\n        ret.ext = path2.slice(startDot, end);\n      }\n      if (startPart > 0) ret.dir = path2.slice(0, startPart - 1);\n      else if (isAbsolute) ret.dir = \"/\";\n      return ret;\n    },\n    sep: \"/\",\n    delimiter: \":\",\n    win32: null,\n    posix: null\n  };\n  posix.posix = posix;\n  pathBrowserify = posix;\n  return pathBrowserify;\n}\nvar pathBrowserifyExports = requirePathBrowserify();\nconst path$5 = /* @__PURE__ */ getDefaultExportFromCjs(pathBrowserifyExports);\nconst vendors = {\n  ini: ini$2,\n  path: path$5\n};\nconst { path: path$4 } = vendors;\nconst fileNameHeaderRegex = /filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/;\nconst urlSegmentSeparator = /[?/#]/;\nfunction isURLStringLike(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  const prefixes = [\"http://\", \"https://\", \"data:\", \"blob:\", \"./\", \"../\"];\n  if (prefixes.some((absolutePrefix) => value.startsWith(absolutePrefix))) {\n    return true;\n  }\n  if ([\"#\", \"{\"].some((char) => value.startsWith(char))) {\n    return false;\n  }\n  if (value.includes(\"\\n\")) {\n    return false;\n  }\n  const segments = value.split(urlSegmentSeparator);\n  if (segments.length < 2) {\n    return false;\n  }\n  return segments.every((segment) => segment.length < 100);\n}\nfunction isURL(value) {\n  return typeof globalThis.URL === \"function\" && value instanceof globalThis.URL;\n}\nfunction isRequest(value) {\n  return typeof globalThis.Request === \"function\" && value instanceof globalThis.Request;\n}\nfunction isResponse(value) {\n  return typeof globalThis.Response === \"function\" && value instanceof globalThis.Response;\n}\nfunction isArrayBuffer(value) {\n  return typeof globalThis.ArrayBuffer === \"function\" && value instanceof globalThis.ArrayBuffer;\n}\nfunction isUint8Array(value) {\n  return typeof globalThis.Uint8Array === \"function\" && value instanceof globalThis.Uint8Array;\n}\nfunction isBlob(value) {\n  return typeof globalThis.Blob === \"function\" && value instanceof globalThis.Blob;\n}\nfunction isFileSystemFileHandle(value) {\n  return typeof globalThis.FileSystemFileHandle === \"function\" && value instanceof globalThis.FileSystemFileHandle;\n}\nfunction isFetchable(value) {\n  return isURLStringLike(value) || isURL(value) || isRequest(value);\n}\nclass ResolvableFile {\n  name = \"\";\n  /** The base name of the file, without its extension. */\n  get baseName() {\n    return path$4.parse(this.name).name;\n  }\n  /** The extension name of the file, with a leading \".\". */\n  get extension() {\n    return path$4.parse(this.name).ext;\n  }\n  arrayBuffer;\n  blob;\n  blobType = \"application/octet-stream\";\n  objectUrl;\n  raw;\n  signal;\n  text;\n  uint8Array;\n  urlResolver;\n  constructor({ blobType, name, raw, signal, urlResolver }) {\n    this.raw = raw;\n    if (signal) {\n      this.signal = signal;\n    }\n    if (urlResolver) {\n      this.urlResolver = urlResolver;\n    }\n    if (blobType) {\n      this.blobType = blobType;\n    }\n    if (name) {\n      this.name = extractValidFileName(name);\n    }\n  }\n  static async create(rawOrOption) {\n    if (isNil(rawOrOption)) {\n      throw new Error(\"parameter is not valid\");\n    }\n    if (rawOrOption instanceof ResolvableFile) {\n      return rawOrOption;\n    }\n    const option = typeof rawOrOption === \"object\" && \"raw\" in rawOrOption ? rawOrOption : { raw: rawOrOption };\n    const resolvableFile = new ResolvableFile(option);\n    await resolvableFile.load();\n    return resolvableFile;\n  }\n  dispose() {\n    if (typeof this.objectUrl === \"string\") {\n      URL.revokeObjectURL(this.objectUrl);\n    }\n  }\n  async getArrayBuffer() {\n    if (this.arrayBuffer) {\n      return this.arrayBuffer;\n    }\n    this.arrayBuffer = await this.getBlob().arrayBuffer();\n    return this.arrayBuffer;\n  }\n  getBlob() {\n    if (!this.blob) {\n      throw new Error(\"blob is not available\");\n    }\n    return this.blob;\n  }\n  getObjectUrl() {\n    if (this.objectUrl) {\n      return this.objectUrl;\n    }\n    this.objectUrl = URL.createObjectURL(this.getBlob());\n    return this.objectUrl;\n  }\n  async getText() {\n    if (this.text !== void 0) {\n      return this.text;\n    }\n    this.text = await this.getBlob().text();\n    return this.text;\n  }\n  async getUint8Array() {\n    if (this.uint8Array) {\n      return this.uint8Array;\n    }\n    const arrayBuffer = await this.getArrayBuffer();\n    this.uint8Array = new Uint8Array(arrayBuffer);\n    return this.uint8Array;\n  }\n  async load() {\n    const result = await getResult(this.urlResolver ? this.urlResolver(this) : this.raw);\n    if (typeof result === \"object\" && \"fileContent\" in result && \"fileName\" in result) {\n      const [fileName, fileContent] = await Promise.all([getResult(result.fileName), getResult(result.fileContent)]);\n      await this.loadContent({ fileContent, fileName });\n    } else {\n      await this.loadContent(result);\n    }\n  }\n  loadArrayBuffer(arrayBuffer) {\n    this.arrayBuffer = arrayBuffer;\n    this.blob = new Blob([arrayBuffer], { type: this.blobType });\n  }\n  async loadContent(content) {\n    if (isBlob(content)) {\n      this.blob = content;\n    } else if (isFetchable(content)) {\n      await this.loadFetchable(content);\n    } else if (typeof content === \"string\") {\n      this.loadPlainText(content);\n    } else if (isResolvableFileContent(content?.fileContent)) {\n      await this.loadObject(content);\n    } else if (isArrayBuffer(content)) {\n      this.loadArrayBuffer(content);\n    } else if (isUint8Array(content)) {\n      this.loadUint8Array(content);\n    } else if (isResponse(content)) {\n      await this.loadResponse(content);\n    } else if (isFileSystemFileHandle(content)) {\n      await this.loadFileSystemFileHandle(content);\n    } else {\n      throw new TypeError(\"failed to resolve the file, file content:\", content);\n    }\n    const uint8Array = await this.getUint8Array();\n    const extention = isZip(uint8Array) ? \"zip\" : \"bin\";\n    this.name ||= generateValidFileName(extention);\n  }\n  async loadFetchable(fetchable) {\n    if (isRequest(fetchable)) {\n      this.name ||= extractValidFileName(fetchable.url);\n    } else if (isURL(fetchable)) {\n      this.name ||= extractValidFileName(fetchable.href);\n    } else {\n      this.name ||= extractValidFileName(fetchable);\n    }\n    const response = await fetch(fetchable, { signal: this.signal || null });\n    await this.loadResponse(response);\n  }\n  async loadFileSystemFileHandle(fileSystemFileHandle) {\n    const file = await fileSystemFileHandle.getFile();\n    this.blob = file;\n    this.name = extractValidFileName(file.name);\n  }\n  async loadObject(object) {\n    let { fileContent, fileName } = object;\n    [fileName, fileContent] = await Promise.all([getResult(fileName), getResult(fileContent)]);\n    this.name ||= extractValidFileName(fileName);\n    await this.loadContent(fileContent);\n  }\n  loadPlainText(text) {\n    this.blob = new Blob([text], { type: this.blobType });\n  }\n  async loadResponse(response) {\n    const header = response.headers.get(\"Content-Disposition\");\n    if (header) {\n      const extracted = fileNameHeaderRegex.exec(header)?.[1]?.replace(/['\"]/g, \"\");\n      if (extracted) {\n        this.name ||= extractValidFileName(extracted);\n      }\n    }\n    this.blob = await response.blob();\n    this.name ||= extractValidFileName(response.url);\n  }\n  loadUint8Array(uint8Array) {\n    this.uint8Array = uint8Array;\n    this.blob = new Blob([uint8Array], { type: this.blobType });\n  }\n}\nconst { path: path$3 } = vendors;\nconst textEncoder = new TextEncoder();\nfunction urlBaseName(url) {\n  let pathname = url;\n  try {\n    pathname = new URL(url).pathname;\n  } catch {\n  }\n  const name = path$3.basename(pathname);\n  try {\n    return decodeURIComponent(name);\n  } catch {\n    return name;\n  }\n}\nlet i = 0;\nfunction id() {\n  i += 1;\n  return i;\n}\nfunction generateValidFileName(extension = \"bin\") {\n  return `data${id()}.${extension}`;\n}\nfunction extractValidFileName(url) {\n  let baseName = urlBaseName(url) || \"\";\n  baseName = baseName.replaceAll(/[\"%*/:<>?\\\\|]/g, \"-\");\n  const extractedExtension = path$3.parse(baseName).ext;\n  if (extractedExtension) {\n    return baseName;\n  }\n  return \"\";\n}\nfunction isAbsoluteUrl(string) {\n  if (!string) {\n    return false;\n  }\n  if (typeof string !== \"string\") {\n    return false;\n  }\n  const absolutePrefixes = [\"http://\", \"https://\", \"//\", \"data:\", \"blob:\"];\n  return absolutePrefixes.some((absolutePrefix) => string.startsWith(absolutePrefix));\n}\nfunction updateStyle(element, style) {\n  if (!element) {\n    return;\n  }\n  for (const rule in style) {\n    const value = style[rule];\n    element.style[rule] = value || null;\n  }\n}\nfunction delay(time) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, time);\n  });\n}\nfunction isGlobalScript(js) {\n  return js.startsWith(\"var Module\");\n}\nfunction isEsmScript(js) {\n  return js.includes(\"import.meta.url\");\n}\nasync function patchCoreJs({ js, name }) {\n  let jsContent = await js.getText();\n  if (isGlobalScript(jsContent)) {\n    jsContent = `export function getEmscripten({ Module }) {\n        ${jsContent};\n        Module.FS = FS;\n        Module.PATH = PATH;\n        Module.ERRNO_CODES = ERRNO_CODES;\n        return {\n          AL: typeof AL === 'undefined' ? null: AL,\n          Browser: typeof Browser === 'undefined' ? null: Browser,\n          JSEvents,\n          Module,\n          exit: _emscripten_force_exit\n         }\n      }`;\n  } else if (isEsmScript(jsContent)) {\n    jsContent = `${jsContent.replace(\"var setImmediate\", \"\").replace(\n      \"readyPromiseResolve(Module)\",\n      `readyPromiseResolve({\n        AL: typeof AL === 'undefined' ? null: AL,\n        Browser: typeof Browser === 'undefined' ? null: Browser,\n        JSEvents,\n        Module,\n        exit: _emscripten_force_exit\n      })`\n    )};\n      export function getEmscripten({ Module }) {\n        return (libretro_${name} || ${name})(Module)\n      }\n    `;\n  }\n  return jsContent;\n}\nasync function importCoreJsAsESM({ js, name }) {\n  const jsContent = await patchCoreJs({ js, name });\n  const jsResolvable = await ResolvableFile.create({ blobType: \"application/javascript\", raw: jsContent });\n  const jsObjectUrl = jsResolvable.getObjectUrl();\n  try {\n    return await import(\n      /* @vite-ignore */\n      /* webpackIgnore: true */\n      jsObjectUrl\n    );\n  } catch {\n    return await new Function(`return import('${jsObjectUrl}')`)();\n  } finally {\n    jsResolvable.dispose();\n  }\n}\nfunction isNil(obj) {\n  return obj === void 0 || obj === null;\n}\nfunction isPlainObject$1(obj) {\n  if (isNil(obj)) {\n    return false;\n  }\n  return obj.constructor === Object || !obj.constructor;\n}\nfunction mergeProperty(target, source, key) {\n  const targetValue = target[key];\n  const sourceValue = source[key];\n  if (isNil(targetValue)) {\n    target[key] = sourceValue;\n  } else if (Array.isArray(targetValue) && Array.isArray(sourceValue)) {\n    target[key] = [...targetValue, ...sourceValue];\n  } else if (isPlainObject$1(targetValue) && isPlainObject$1(sourceValue)) {\n    target[key] = isPlainObject$1(targetValue) ? target[key] : {};\n    merge(target[key], sourceValue);\n  } else {\n    target[key] = sourceValue;\n  }\n}\nfunction merge(target, ...sources) {\n  if (sources.length === 1) {\n    const [source] = sources;\n    for (const key in source) {\n      mergeProperty(target, source, key);\n    }\n  } else {\n    for (const source of sources) {\n      merge(target, source);\n    }\n  }\n}\nfunction checkIsAborted(signal) {\n  if (signal?.aborted) {\n    uninstallSetImmediatePolyfill();\n    throw new Error(\"Launch aborted\");\n  }\n}\nfunction padZero(number) {\n  return (number < 10 ? \"0\" : \"\") + number;\n}\nasync function getResult(value) {\n  if (!value) {\n    return value;\n  }\n  if (typeof value?.then === \"function\") {\n    return getResult(await value);\n  }\n  if (typeof value === \"function\") {\n    return getResult(value());\n  }\n  return value;\n}\nfunction isResolvableFileContent(value) {\n  if (typeof value === \"string\") {\n    return true;\n  }\n  const resolvableClasses = [\n    globalThis.Response,\n    globalThis.Uint8Array,\n    globalThis.URL,\n    globalThis.Request,\n    globalThis.Response,\n    globalThis.FileSystemFileHandle,\n    globalThis.Blob\n  ];\n  return resolvableClasses.some((clazz) => clazz && value instanceof clazz);\n}\nfunction isResolvableFileInput(value) {\n  if (typeof value === \"string\") {\n    return true;\n  }\n  if (\"fileContent\" in value) {\n    return true;\n  }\n  if (Array.isArray(value)) {\n    return value.every((item) => isResolvableFileInput(item));\n  }\n  return isResolvableFileContent(value);\n}\nfunction isZip(uint8Array) {\n  return uint8Array[0] === 80 && // eslint-disable-next-line unicorn/number-literal-case\n  uint8Array[1] === 75 && (uint8Array[2] === 3 || uint8Array[2] === 5 || uint8Array[2] === 7) && (uint8Array[3] === 4 || uint8Array[3] === 6 || uint8Array[3] === 8);\n}\nconst originalSetImmediate = globalThis.setImmediate;\nfunction setImmediate(callback) {\n  return originalSetImmediate ? originalSetImmediate(callback) : setTimeout(callback, 0);\n}\nfunction installSetImmediatePolyfill() {\n  if (typeof globalThis.setImmediate === \"function\") {\n    return;\n  }\n  globalThis.setImmediate = setImmediate;\n}\nfunction uninstallSetImmediatePolyfill() {\n  if (globalThis.setImmediate === setImmediate) {\n    delete globalThis.setImmediate;\n  }\n}\nconst { path: path$2 } = vendors;\nfunction getDefaultRetroarchConfig() {\n  const defaultRetroarchConfig = {\n    menu_driver: \"rgui\",\n    menu_navigation_browser_filter_supported_extensions_enable: false,\n    notification_show_when_menu_is_alive: true,\n    savestate_auto_load: true,\n    savestate_thumbnail_enable: true,\n    stdin_cmd_enable: true,\n    video_shader_enable: true,\n    input_audio_mute: \"nul\",\n    // override default 'f9'\n    input_cheat_index_minus: \"nul\",\n    // override default 't',\n    input_cheat_index_plus: \"nul\",\n    // override default 'y',\n    input_cheat_toggle: \"nul\",\n    // override default 'u',\n    input_desktop_menu_toggle: \"nul\",\n    // override default 'f5'\n    input_exit_emulator: \"nul\",\n    // override default 'esc',\n    input_fps_toggle: \"nul\",\n    // override default 'f3'\n    input_frame_advance: \"nul\",\n    // override default 'k',\n    input_game_focus_toggle: \"nul\",\n    // override default 'scroll_lock'\n    input_grab_mouse_toggle: \"nul\",\n    // override default 'f11'\n    input_hold_fast_forward: \"nul\",\n    // override default 'l',\n    input_hold_slowmotion: \"nul\",\n    // override default 'e',\n    input_load_state: \"nul\",\n    // override default 'f4'\n    input_netplay_game_watch: \"nul\",\n    // override default 'i',\n    input_netplay_player_chat: \"nul\",\n    // override default 'tilde'\n    input_pause_toggle: \"nul\",\n    // override default 'p',\n    input_reset: \"nul\",\n    // override default 'h',\n    input_rewind: \"nul\",\n    // override default 'r',\n    input_save_state: \"nul\",\n    // override default 'f2'\n    input_screenshot: \"nul\",\n    // override default 'f8'\n    input_shader_next: \"nul\",\n    // override default 'm',\n    input_shader_prev: \"nul\",\n    // override default 'n',\n    input_shader_toggle: \"nul\",\n    // override default 'comma'\n    input_state_slot_decrease: \"nul\",\n    // override default 'f6'\n    input_state_slot_increase: \"nul\",\n    // override default 'f7'\n    input_toggle_fast_forward: \"nul\",\n    // override default 'space'\n    input_toggle_fullscreen: \"nul\",\n    // override default 'f',\n    input_volume_down: \"nul\",\n    // override default 'subtract'\n    input_volume_up: \"nul\",\n    // override default 'add'\n    input_player1_analog_dpad_mode: 1,\n    input_player2_analog_dpad_mode: 1,\n    input_player3_analog_dpad_mode: 1,\n    input_player4_analog_dpad_mode: 1\n  };\n  return defaultRetroarchConfig;\n}\nconst cdnBaseUrl = \"https://cdn.jsdelivr.net/gh\";\nconst coreRepo = \"arianrhodsandlot/retroarch-emscripten-build\";\nconst coreVersion = \"v1.21.0\";\nconst coreDirectory = \"retroarch\";\nconst shaderRepo = \"libretro/glsl-shaders\";\nconst shaderVersion = \"f3dc75a\";\nfunction getDefaultOptions() {\n  const defaultOptions = {\n    element: \"\",\n    retroarchConfig: getDefaultRetroarchConfig(),\n    retroarchCoreConfig: {},\n    runEmulatorManually: false,\n    setupEmulatorManually: false,\n    resolveCoreJs(core) {\n      return `${cdnBaseUrl}/${coreRepo}@${coreVersion}/${coreDirectory}/${core}_libretro.js`;\n    },\n    resolveCoreWasm(core) {\n      return `${cdnBaseUrl}/${coreRepo}@${coreVersion}/${coreDirectory}/${core}_libretro.wasm`;\n    },\n    resolveRom(file) {\n      if (typeof file !== \"string\") {\n        return file || [];\n      }\n      if (isAbsoluteUrl(file)) {\n        return file;\n      }\n      const extension = path$2.extname(file);\n      const romRepo = {\n        \".bin\": \"retrobrews/md-games\",\n        \".gb\": \"retrobrews/gbc-games\",\n        \".gba\": \"retrobrews/gba-games\",\n        \".gbc\": \"retrobrews/gbc-games\",\n        \".md\": \"retrobrews/md-games\",\n        \".nes\": \"retrobrews/nes-games\",\n        \".sfc\": \"retrobrews/snes-games\",\n        \".sms\": \"retrobrews/sms-games\"\n      }[extension];\n      if (romRepo) {\n        const encodedFile = encodeURIComponent(file);\n        return `${cdnBaseUrl}/${romRepo}@master/${encodedFile}`;\n      }\n      return file;\n    },\n    resolveBios(file) {\n      return file;\n    },\n    resolveShader(name) {\n      if (!name) {\n        return [];\n      }\n      const preset = `${cdnBaseUrl}/${shaderRepo}@${shaderVersion}/${name}.glslp`;\n      const segments = name.split(path$2.sep);\n      segments.splice(-1, 0, \"shaders\");\n      const shader = `${cdnBaseUrl}/${shaderRepo}@${shaderVersion}/${segments.join(path$2.sep)}.glsl`;\n      return [preset, shader];\n    }\n  };\n  return defaultOptions;\n}\nlet globalOptions = getDefaultOptions();\nfunction getGlobalOptions() {\n  return globalOptions;\n}\nfunction updateGlobalOptions(options) {\n  merge(globalOptions, options);\n}\nfunction resetGlobalOptions() {\n  globalOptions = getDefaultOptions();\n}\nfunction isPlainObject(value) {\n  if (typeof value !== \"object\" || value === null) {\n    return false;\n  }\n  const prototype = Object.getPrototypeOf(value);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\nfunction isValidCacheKey(cacheKey) {\n  return typeof cacheKey === \"string\" || isPlainObject(cacheKey);\n}\nfunction getCacheStore() {\n  return {\n    bios: /* @__PURE__ */ new Map(),\n    core: /* @__PURE__ */ new Map(),\n    rom: /* @__PURE__ */ new Map(),\n    shader: /* @__PURE__ */ new Map(),\n    sram: /* @__PURE__ */ new Map(),\n    state: /* @__PURE__ */ new Map()\n  };\n}\nclass EmulatorOptions {\n  static cacheStorage = getCacheStore();\n  beforeLaunch;\n  bios = [];\n  cache = { bios: false, core: false, rom: false, shader: false, sram: false, state: false };\n  core = {};\n  element;\n  /**\n   * An option to override the `Module` object for Emscripten. See [Module object](https://emscripten.org/docs/api_reference/module.html).\n   *\n   * This is a low level option and not well tested, so use it at your own risk.\n   */\n  emscriptenModule;\n  respondToGlobalEvents;\n  rom = [];\n  shader = [];\n  signal;\n  /**\n   *\n   * The size of the canvas element.\n   * If it's `'auto'`, the canvas element will keep its original size, or it's width and height will be updated as specified.\n   */\n  size;\n  sram;\n  state;\n  waitForInteraction;\n  /**\n   * RetroArch config.\n   * Not all options can make effects in browser.\n   */\n  get retroarchConfig() {\n    const options = {};\n    merge(options, getGlobalOptions().retroarchConfig, this.nostalgistOptions.retroarchConfig);\n    return options;\n  }\n  /**\n   * RetroArch core config.\n   * Not all options can make effects in browser.\n   */\n  get retroarchCoreConfig() {\n    const options = {};\n    merge(options, getGlobalOptions().retroarchCoreConfig, this.nostalgistOptions.retroarchCoreConfig);\n    return options;\n  }\n  get style() {\n    const { element, style } = this.nostalgistOptions;\n    const defaultAppearanceStyle = {\n      backgroundColor: \"black\",\n      imageRendering: \"pixelated\"\n    };\n    if (element) {\n      merge(defaultAppearanceStyle, style);\n      return defaultAppearanceStyle;\n    }\n    const defaultLayoutStyle = {\n      height: \"100%\",\n      left: \"0\",\n      position: \"fixed\",\n      top: \"0\",\n      width: \"100%\",\n      zIndex: \"1\"\n    };\n    merge(defaultLayoutStyle, defaultAppearanceStyle, style);\n    return defaultLayoutStyle;\n  }\n  loadPromises = [];\n  nostalgistOptions;\n  constructor(options) {\n    this.nostalgistOptions = options;\n    this.emscriptenModule = options.emscriptenModule ?? {};\n    this.respondToGlobalEvents = options.respondToGlobalEvents ?? true;\n    this.signal = options.signal;\n    this.size = options.size ?? \"auto\";\n    this.waitForInteraction = options.waitForInteraction;\n    this.element = this.getElement();\n    if (typeof options.cache === \"boolean\") {\n      for (const key in this.cache) {\n        this.cache[key] = options.cache;\n      }\n    } else {\n      Object.assign(this.cache, options.cache);\n    }\n  }\n  static async create(options) {\n    const emulatorOptions = new EmulatorOptions(options);\n    await emulatorOptions.load();\n    return emulatorOptions;\n  }\n  static resetCacheStore() {\n    Object.assign(EmulatorOptions.cacheStorage, getCacheStore());\n  }\n  async load() {\n    this.loadFromCache();\n    await Promise.all(this.loadPromises);\n    this.saveToCache();\n  }\n  loadFromCache() {\n    const loadPromises = [];\n    const loadMethodMap = {\n      bios: this.updateBios,\n      core: this.updateCore,\n      rom: this.updateRom,\n      shader: this.updateShader,\n      sram: this.updateSRAM,\n      state: this.updateState\n    };\n    for (const key in this.cache) {\n      const field = key;\n      if (this.cache[field]) {\n        const cache = EmulatorOptions.cacheStorage[field];\n        const cacheKey = this.nostalgistOptions[field];\n        if (isValidCacheKey(cacheKey)) {\n          const cacheValue = cache.get(cacheKey);\n          if (cacheValue) {\n            this[field] = cacheValue;\n            continue;\n          }\n        }\n      }\n      const method = loadMethodMap[field];\n      const promise = method.call(this);\n      loadPromises.push(promise);\n    }\n    this.loadPromises = loadPromises;\n  }\n  saveToCache() {\n    for (const key in this.cache) {\n      const field = key;\n      if (this.cache[field]) {\n        const cache = EmulatorOptions.cacheStorage[field];\n        const cacheKey = this.nostalgistOptions[field];\n        const cacheValue = this[field];\n        if (isValidCacheKey(cacheKey) && cacheValue) {\n          cache.set(cacheKey, cacheValue);\n        }\n      }\n    }\n  }\n  async updateSRAM() {\n    if (this.nostalgistOptions.sram) {\n      this.sram = await ResolvableFile.create(this.nostalgistOptions.sram);\n    }\n  }\n  async updateState() {\n    if (this.nostalgistOptions.state) {\n      this.state = await ResolvableFile.create(this.nostalgistOptions.state);\n    }\n  }\n  getElement() {\n    if (typeof document !== \"object\") {\n      throw new TypeError(\"document must be an object\");\n    }\n    let { element } = this.nostalgistOptions;\n    if (typeof element === \"string\" && element) {\n      const canvas = document.body.querySelector(element);\n      if (!canvas) {\n        throw new Error(`can not find element \"${element}\"`);\n      }\n      if (!(canvas instanceof HTMLCanvasElement)) {\n        throw new TypeError(`element \"${element}\" is not a canvas element`);\n      }\n      element = canvas;\n    }\n    if (!element) {\n      element = document.createElement(\"canvas\");\n    }\n    if (element instanceof HTMLCanvasElement) {\n      element.id = \"canvas\";\n      return element;\n    }\n    throw new TypeError(\"invalid element\");\n  }\n  async updateBios() {\n    let { bios, resolveBios } = this.nostalgistOptions;\n    if (!bios) {\n      return;\n    }\n    bios = await getResult(bios);\n    if (!bios) {\n      return;\n    }\n    const biosFiles = Array.isArray(bios) ? bios : [bios];\n    this.bios = await Promise.all(\n      biosFiles.map(\n        (raw) => ResolvableFile.create(\n          typeof raw === \"string\" ? { raw, signal: this.signal, urlResolver: () => resolveBios(raw, this.nostalgistOptions) } : { raw, signal: this.signal }\n        )\n      )\n    );\n  }\n  async updateCore() {\n    const { core, resolveCoreJs, resolveCoreWasm } = this.nostalgistOptions;\n    if (typeof core === \"object\" && \"js\" in core && \"name\" in core && \"wasm\" in core) {\n      const [js, wasm] = await Promise.all([ResolvableFile.create(core.js), ResolvableFile.create(core.wasm)]);\n      this.core = { js, name: core.name, wasm };\n      return;\n    }\n    const [coreResolvable, coreWasmResolvable] = await Promise.all(\n      [resolveCoreJs, resolveCoreWasm].map(\n        (resolver) => ResolvableFile.create({\n          raw: core,\n          signal: this.signal,\n          urlResolver: () => resolver(core, this.nostalgistOptions)\n        })\n      )\n    );\n    const name = typeof core === \"string\" ? core : coreResolvable.name;\n    this.core = { js: coreResolvable, name, wasm: coreWasmResolvable };\n  }\n  async updateRom() {\n    let { resolveRom, rom } = this.nostalgistOptions;\n    if (!rom) {\n      return;\n    }\n    rom = await getResult(rom);\n    if (!rom) {\n      return;\n    }\n    const romFiles = Array.isArray(rom) ? rom : [rom];\n    this.rom = await Promise.all(\n      romFiles.map(\n        (romFile) => ResolvableFile.create(\n          typeof romFile === \"string\" ? { raw: romFile, signal: this.signal, urlResolver: () => resolveRom(romFile, this.nostalgistOptions) } : { raw: romFile, signal: this.signal }\n        )\n      )\n    );\n    for (const resolvable of this.rom) {\n      resolvable.name ||= generateValidFileName();\n    }\n  }\n  async updateShader() {\n    let { resolveShader, shader } = this.nostalgistOptions;\n    if (!shader) {\n      return;\n    }\n    shader = await getResult(shader);\n    if (!shader) {\n      return;\n    }\n    let rawShaderFile = await resolveShader(shader, this.nostalgistOptions);\n    if (!rawShaderFile) {\n      return;\n    }\n    rawShaderFile = await getResult(rawShaderFile);\n    if (!rawShaderFile) {\n      return;\n    }\n    const rawShaderFiles = Array.isArray(rawShaderFile) ? rawShaderFile : [rawShaderFile];\n    this.shader = await Promise.all(\n      rawShaderFiles.map((rawShaderFile2) => ResolvableFile.create({ raw: rawShaderFile2, signal: this.signal }))\n    );\n  }\n}\nconst coreInfoMap = {\n  \"2048\": { savestate: true, supportsNoGame: true },\n  \"3dengine\": { corename: \"3DEngine\" },\n  \"4do\": { corename: \"4DO\", savestate: true },\n  \"81\": { savestate: true },\n  a5200: { savestate: true },\n  advanced_tests: { corename: \"Advanced Test\", supportsNoGame: true },\n  ardens: { corename: \"Ardens\", savestate: true },\n  arduous: { corename: \"Arduous\" },\n  atari800: { corename: \"Atari800\", savestate: true },\n  bk: { savestate: true },\n  blastem: { corename: \"BlastEm\", savestate: true },\n  bluemsx: { corename: \"blueMSX\", savestate: true },\n  bnes: { corename: \"bnes/higan\", savestate: true },\n  boom3: {},\n  boom3_xp: {},\n  bsnes: { savestate: true },\n  bsnes_cplusplus98: { cheats: true, corename: \"bsnes C++98 (v085)\", savestate: true },\n  bsnes_hd_beta: { corename: \"bsnes-hd beta\", savestate: true },\n  bsnes_mercury_accuracy: { cheats: true, corename: \"bsnes-mercury Accuracy\", savestate: true },\n  bsnes_mercury_balanced: { cheats: true, corename: \"bsnes-mercury Balanced\", savestate: true },\n  bsnes_mercury_performance: { cheats: true, corename: \"bsnes-mercury Performance\", savestate: true },\n  bsnes2014_accuracy: { cheats: true, corename: \"bsnes 2014 Accuracy\", savestate: true },\n  bsnes2014_balanced: { cheats: true, corename: \"bsnes 2014 Balanced\", savestate: true },\n  bsnes2014_performance: { cheats: true, corename: \"bsnes 2014 Performance\", savestate: true },\n  cannonball: { corename: \"Cannonball\", supportsNoGame: true },\n  cap32: { corename: \"Caprice32\", savestate: true, supportsNoGame: true },\n  cdi2015: { corename: \"Philips CDi 2015\" },\n  chailove: { cheats: true, corename: \"ChaiLove\", savestate: true },\n  chimerasnes: { cheats: true, corename: \"ChimeraSNES\", savestate: true },\n  citra: { corename: \"Citra\", savestate: true },\n  citra_canary: { corename: \"Citra Canary/Experimental\" },\n  citra2018: { corename: \"Citra 2018\" },\n  craft: { corename: \"Craft\", supportsNoGame: true },\n  crocods: { corename: \"CrocoDS\", savestate: true },\n  cruzes: { corename: \"Cruzes\", supportsNoGame: true },\n  daphne: { corename: \"Daphne\" },\n  desmume: { cheats: true, corename: \"DeSmuME\", savestate: true },\n  desmume2015: { cheats: true, corename: \"DeSmuME 2015\", savestate: true },\n  dinothawr: { corename: \"Dinothawr\", supportsNoGame: true },\n  directxbox: { corename: \"DirectXBox\" },\n  dirksimple: { corename: \"DirkSimple\", savestate: true },\n  dolphin: { corename: \"Dolphin\", savestate: true },\n  dolphin_launcher: { corename: \"Dolphin Launcher\", supportsNoGame: true },\n  dosbox: { corename: \"DOSBox\", supportsNoGame: true },\n  dosbox_core: { corename: \"DOSBox-core\", supportsNoGame: true },\n  dosbox_pure: { cheats: true, corename: \"DOSBox-pure\", savestate: true, supportsNoGame: true },\n  dosbox_svn: { corename: \"DOSBox-SVN\", supportsNoGame: true },\n  dosbox_svn_ce: { corename: \"DOSBox-SVN CE\", supportsNoGame: true },\n  duckstation: { corename: \"DuckStation\", savestate: true },\n  easyrpg: { corename: \"EasyRPG Player\" },\n  ecwolf: { corename: \"ECWolf\", savestate: true },\n  emuscv: { corename: \"EmuSCV\", supportsNoGame: true },\n  emux_chip8: { corename: \"Emux CHIP-8\" },\n  emux_gb: { corename: \"Emux GB\" },\n  emux_nes: { corename: \"Emux NES\" },\n  emux_sms: { corename: \"Emux SMS\" },\n  ep128emu_core: { cheats: true, corename: \"ep128emu-core\", savestate: true, supportsNoGame: true },\n  fake08: { corename: \"FAKE-08\", savestate: true },\n  fbalpha2012: { corename: \"FB Alpha 2012\", savestate: true },\n  fbalpha2012_cps1: { corename: \"FB Alpha 2012 CPS-1\", savestate: true },\n  fbalpha2012_cps2: { corename: \"FB Alpha 2012 CPS-2\", savestate: true },\n  fbalpha2012_cps3: { corename: \"FB Alpha 2012 CPS-3\", savestate: true },\n  fbalpha2012_neogeo: { corename: \"FB Alpha 2012 Neo Geo\", savestate: true },\n  fbneo: { cheats: true, corename: \"FinalBurn Neo\", savestate: true },\n  fceumm: { cheats: true, corename: \"FCEUmm\", savestate: true },\n  ffmpeg: { corename: \"FFmpeg\" },\n  fixgb: { corename: \"fixGB\" },\n  fixnes: { corename: \"fixNES\" },\n  flycast: { corename: \"Flycast\", savestate: true },\n  flycast_gles2: { corename: \"Flycast GLES2\", savestate: true },\n  fmsx: { corename: \"fMSX\" },\n  freechaf: { corename: \"FreeChaF\" },\n  freeintv: { corename: \"FreeIntv\" },\n  freej2me: { corename: \"FreeJ2ME\" },\n  frodo: { corename: \"Frodo\" },\n  fsuae: { corename: \"FS-UAE\" },\n  fuse: { corename: \"Fuse\" },\n  galaksija: { supportsNoGame: true },\n  gambatte: { corename: \"Gambatte\", savestate: true },\n  gearboy: { corename: \"Gearboy\" },\n  gearcoleco: { corename: \"Gearcoleco\" },\n  gearsystem: { corename: \"Gearsystem\" },\n  genesis_plus_gx: { cheats: true, corename: \"Genesis Plus GX\", savestate: true },\n  genesis_plus_gx_wide: { cheats: true, corename: \"Genesis Plus GX Wide\", savestate: true },\n  gme: { corename: \"Game Music Emu\" },\n  gong: { corename: \"Gong\", savestate: true, supportsNoGame: true },\n  gpsp: { corename: \"gpSP\", savestate: true },\n  gw: { corename: \"GW\" },\n  handy: { corename: \"Handy\", savestate: true },\n  hatari: { corename: \"Hatari\", savestate: true },\n  hbmame: { corename: \"HBMAME (Git)\" },\n  higan_sfc: { corename: \"nSide (Super Famicom Accuracy)\", savestate: true },\n  higan_sfc_balanced: { corename: \"nSide (Super Famicom Balanced)\", savestate: true },\n  imageviewer: { corename: \"Imageviewer\" },\n  ishiiruka: { corename: \"Ishiiruka\", savestate: true },\n  jaxe: { corename: \"JAXE\" },\n  jumpnbump: { corename: \"jumpnbump\" },\n  kronos: { cheats: true, corename: \"Kronos\", savestate: true },\n  lowresnx: { corename: \"lowresnx\" },\n  lutro: { corename: \"Lutro\" },\n  mame: { corename: \"MAME\", savestate: true },\n  mame2000: { corename: \"MAME 2000 (0.37b5)\", savestate: true },\n  mame2003: { corename: \"MAME 2003 (0.78)\", savestate: true },\n  mame2003_midway: { corename: \"MAME 2003 Midway (0.78)\", savestate: true },\n  mame2003_plus: { corename: \"MAME 2003-Plus\", savestate: true },\n  mame2009: { corename: \"MAME 2009 (0.135u4)\" },\n  mame2010: { corename: \"MAME 2010 (0.139)\" },\n  mame2015: { corename: \"MAME 2015 (0.160)\" },\n  mame2016: { corename: \"MAME 2016 (0.174)\" },\n  mamearcade: { corename: \"MAME (Git)\" },\n  mamemess: { corename: \"MESS (Git)\", savestate: true },\n  mednafen_gba: { corename: \"Beetle GBA\" },\n  mednafen_lynx: { corename: \"Beetle Lynx\" },\n  mednafen_ngp: { corename: \"Beetle NeoPop\", savestate: true },\n  mednafen_pce: { corename: \"Beetle PCE\", savestate: true },\n  mednafen_pce_fast: { corename: \"Beetle PCE Fast\", savestate: true },\n  mednafen_pcfx: { corename: \"Beetle PC-FX\" },\n  mednafen_psx: { cheats: true, corename: \"Beetle PSX\", savestate: true },\n  mednafen_psx_hw: { cheats: true, corename: \"Beetle PSX HW\", savestate: true },\n  mednafen_saturn: { cheats: true, corename: \"Beetle Saturn\", savestate: true },\n  mednafen_snes: { corename: \"Beetle bsnes\", savestate: true },\n  mednafen_supafaust: { cheats: true, corename: \"Beetle Supafaust\", savestate: true },\n  mednafen_supergrafx: { cheats: true, corename: \"Beetle SuperGrafx\", savestate: true },\n  mednafen_vb: { corename: \"Beetle VB\" },\n  mednafen_wswan: { corename: \"Beetle WonderSwan\", savestate: true },\n  melonds: { corename: \"melonDS\" },\n  mesen: { cheats: true, corename: \"Mesen\", savestate: true },\n  \"mesen-s\": { corename: \"Mesen-S\" },\n  mess2015: { corename: \"MESS 2015 (0.160)\" },\n  meteor: { corename: \"Meteor\" },\n  mgba: { cheats: true, corename: \"mGBA\", savestate: true },\n  minivmac: { corename: \"MinivmacII\" },\n  mojozork: { corename: \"mojozork\", savestate: true },\n  moonlight: { corename: \"Moonlight\", supportsNoGame: true },\n  mpv: { corename: \"MPV\" },\n  mrboom: { corename: \"Mr.Boom\", savestate: true, supportsNoGame: true },\n  mu: { corename: \"Mu\", supportsNoGame: true },\n  mupen64plus_next: { cheats: true, corename: \"Mupen64Plus-Next\", savestate: true },\n  mupen64plus_next_develop: { cheats: true, corename: \"Mupen64Plus-Next\", savestate: true },\n  mupen64plus_next_gles2: { cheats: true, corename: \"Mupen64Plus-Next\", savestate: true },\n  mupen64plus_next_gles3: { cheats: true, corename: \"Mupen64Plus-Next\", savestate: true },\n  nekop2: { corename: \"Neko Project II\", savestate: true },\n  neocd: { corename: \"NeoCD\" },\n  nes: { savestate: true },\n  nestopia: { cheats: true, corename: \"Nestopia\", savestate: true },\n  np2kai: { corename: \"Neko Project II Kai\", savestate: true },\n  numero: { corename: \"Numero\", savestate: true, supportsNoGame: true },\n  nxengine: { corename: \"NXEngine\", supportsNoGame: true },\n  o2em: { corename: \"O2EM\", savestate: true },\n  oberon: { corename: \"Oberon\" },\n  openlara: { corename: \"OpenLara\" },\n  opentyrian: { corename: \"OpenTyrian\", supportsNoGame: true },\n  opera: { corename: \"Opera\", savestate: true, supportsNoGame: true },\n  parallel_n64: { corename: \"ParaLLEl N64\", savestate: true },\n  parallel_n64_debug: { corename: \"ParaLLEl (Debug)\", savestate: true },\n  pascal_pong: { corename: \"PascalPong\", supportsNoGame: true },\n  pcem: { corename: \"PCem\", supportsNoGame: true },\n  pcsx_rearmed: { cheats: true, corename: \"PCSX-ReARMed\", savestate: true },\n  pcsx_rearmed_interpreter: { cheats: true, corename: \"PCSX ReARMed [Interpreter]\", savestate: true },\n  pcsx_rearmed_neon: { cheats: true, corename: \"PCSX ReARMed [NEON]\", savestate: true },\n  pcsx1: { corename: \"PCSX1\" },\n  pcsx2: { corename: \"LRPS2\", savestate: true },\n  picodrive: { cheats: true, corename: \"PicoDrive\", savestate: true },\n  play: { corename: \"Play!\", savestate: true },\n  pocketcdg: { corename: \"PocketCDG\" },\n  pokemini: { corename: \"PokeMini\", savestate: true },\n  potator: { corename: \"Potator\", savestate: true },\n  ppsspp: { corename: \"PPSSPP\", savestate: true },\n  prboom: { cheats: true, corename: \"PrBoom\", savestate: true },\n  prosystem: { corename: \"ProSystem\", savestate: true },\n  puae: { cheats: true, corename: \"PUAE\", savestate: true, supportsNoGame: true },\n  puae2021: { cheats: true, corename: \"PUAE 2021\", savestate: true, supportsNoGame: true },\n  puzzlescript: { corename: \"puzzlescript\", savestate: true },\n  px68k: { corename: \"PX68k\", supportsNoGame: true },\n  quasi88: { cheats: true, corename: \"QUASI88\", savestate: true, supportsNoGame: true },\n  quicknes: { corename: \"QuickNES\", savestate: true },\n  race: { corename: \"RACE\", savestate: true },\n  redbook: { corename: \"Redbook\" },\n  reminiscence: { corename: \"REminiscence\", savestate: true },\n  remotejoy: { corename: \"RemoteJoy\", supportsNoGame: true },\n  retro8: { corename: \"Retro8\" },\n  retrodream: { corename: \"RetroDream\" },\n  rustation: { corename: \"Rustation\" },\n  same_cdi: { corename: \"SAME CDi (Git)\" },\n  sameboy: { corename: \"SameBoy\" },\n  sameduck: { corename: \"SameDuck\", savestate: true },\n  scummvm: { corename: \"ScummVM\", supportsNoGame: true },\n  simcp: { corename: \"SimCoupe\" },\n  smsplus: { corename: \"SMS Plus GX\" },\n  snes9x: { cheats: true, corename: \"Snes9x\", savestate: true },\n  snes9x2002: { cheats: true, corename: \"Snes9x 2002\", savestate: true },\n  snes9x2005: { cheats: true, corename: \"Snes9x 2005\", savestate: true },\n  snes9x2005_plus: { cheats: true, corename: \"Snes9x 2005 Plus\", savestate: true },\n  snes9x2010: { cheats: true, corename: \"Snes9x 2010\", savestate: true },\n  squirreljme: { corename: \"SquirrelJME\", supportsNoGame: true },\n  stella: { corename: \"Stella\", savestate: true },\n  stella2014: { corename: \"Stella 2014\", savestate: true },\n  stonesoup: { corename: \"Dungeon Crawl Stone Soup\" },\n  superbroswar: { corename: \"superbroswar\" },\n  swanstation: { corename: \"SwanStation\", savestate: true },\n  tempgba: { corename: \"TempGBA\" },\n  test: { corename: \"Test\", supportsNoGame: true },\n  test_netplay: { corename: \"netplay-test\", supportsNoGame: true },\n  testaudio_callback: { corename: \"TestAudio Callback\", supportsNoGame: true },\n  testaudio_no_callback: { corename: \"TestAudio NoCallback\", supportsNoGame: true },\n  testaudio_playback_wav: { corename: \"TestAudio Playback Wav\", supportsNoGame: true },\n  testgl: { corename: \"TestGL\", supportsNoGame: true },\n  testgl_compute_shaders: { corename: \"TestGL ComputeShaders\", supportsNoGame: true },\n  testgl_ff: { corename: \"TestGL (FF)\", supportsNoGame: true },\n  testinput_buttontest: { corename: \"Button Test\", supportsNoGame: true },\n  testretroluxury: { corename: \"Test RetroLuxury\", supportsNoGame: true },\n  testsw: { corename: \"TestSW\", supportsNoGame: true },\n  testsw_vram: { corename: \"TestSW VRAM\", supportsNoGame: true },\n  testvulkan: { corename: \"TestVulkan\", supportsNoGame: true },\n  testvulkan_async_compute: { corename: \"TestVulkan AsyncCompute\", supportsNoGame: true },\n  tgbdual: { corename: \"TGB Dual\", savestate: true },\n  theodore: { corename: \"theodore\", savestate: true, supportsNoGame: true },\n  thepowdertoy: { corename: \"ThePowderToy\", savestate: true, supportsNoGame: true },\n  tic80: { cheats: true, corename: \"TIC-80\", savestate: true },\n  tyrquake: { cheats: true, corename: \"TyrQuake\" },\n  uae4arm: { corename: \"UAE4ARM\", savestate: true },\n  ume2015: { corename: \"UME 2015 (0.160)\" },\n  uw8: { corename: \"MicroW8\", savestate: true },\n  uzem: { savestate: true },\n  vaporspec: { corename: \"VaporSpec\", savestate: true },\n  vba_next: { corename: \"VBA Next\", savestate: true },\n  vbam: { cheats: true, corename: \"VBA-M\", savestate: true },\n  vecx: { savestate: true },\n  vemulator: { corename: \"VeMUlator\" },\n  vice_x128: { cheats: true, corename: \"VICE x128\", savestate: true, supportsNoGame: true },\n  vice_x64: { cheats: true, corename: \"VICE x64\", savestate: true, supportsNoGame: true },\n  vice_x64dtv: { cheats: true, corename: \"VICE x64dtv\", savestate: true, supportsNoGame: true },\n  vice_x64sc: { cheats: true, corename: \"VICE x64sc\", savestate: true, supportsNoGame: true },\n  vice_xcbm2: { cheats: true, corename: \"VICE xcbm2\", savestate: true, supportsNoGame: true },\n  vice_xcbm5x0: { cheats: true, corename: \"VICE xcbm5x0\", savestate: true, supportsNoGame: true },\n  vice_xpet: { cheats: true, corename: \"VICE xpet\", savestate: true, supportsNoGame: true },\n  vice_xplus4: { cheats: true, corename: \"VICE xplus4\", savestate: true, supportsNoGame: true },\n  vice_xscpu64: { cheats: true, corename: \"VICE xscpu64\", savestate: true, supportsNoGame: true },\n  vice_xvic: { cheats: true, corename: \"VICE xvic\", savestate: true, supportsNoGame: true },\n  vircon32: { corename: \"Vircon32\", supportsNoGame: true },\n  virtualjaguar: { corename: \"Virtual Jaguar\" },\n  virtualxt: {},\n  vitaquake2: { corename: \"vitaQuake 2\" },\n  \"vitaquake2-rogue\": { corename: \"vitaQuake 2 [Rogue]\" },\n  \"vitaquake2-xatrix\": { corename: \"vitaQuake 2 [Xatrix]\" },\n  \"vitaquake2-zaero\": { corename: \"vitaQuake 2 [Zaero]\" },\n  vitaquake3: { corename: \"vitaQuake 3\" },\n  vitavoyager: { corename: \"vitaVoyager\" },\n  wasm4: { corename: \"WASM-4\", savestate: true },\n  x1: {},\n  x64sdl: { corename: \"VICE SDL\" },\n  xrick: { corename: \"XRick\", supportsNoGame: true },\n  yabasanshiro: { cheats: true, corename: \"YabaSanshiro\", savestate: true },\n  yabause: { cheats: true, corename: \"Yabause\", savestate: true }\n};\nconst keyboardCodeMap = {\n  add: \"NumpadAdd\",\n  // is this right?\n  alt: \"AltLeft\",\n  backquote: \"Backquote\",\n  backslash: \"\",\n  // what's this?\n  backspace: \"Backspace\",\n  capslock: \"CapsLock\",\n  comma: \"Comma\",\n  ctrl: \"ControlLeft\",\n  del: \"Delete\",\n  divide: \"NumpadDivide\",\n  down: \"ArrowDown\",\n  end: \"End\",\n  enter: \"Enter\",\n  equals: \"Equal\",\n  escape: \"Escape\",\n  home: \"Home\",\n  insert: \"Insert\",\n  kp_enter: \"NumpadEnter\",\n  kp_equals: \"NumpadEquals\",\n  // is this right?\n  kp_minus: \"NumpadSubtract\",\n  kp_period: \"NumpadDecimal\",\n  kp_plus: \"NumpadAdd\",\n  left: \"ArrowLeft\",\n  leftbracket: \"BracketLeft\",\n  // is this right?\n  minus: \"Minus\",\n  multiply: \"NumpadMultiply\",\n  numlock: \"NumLock\",\n  pagedown: \"PageDown\",\n  pageup: \"PageUp\",\n  pause: \"Pause\",\n  period: \"Period\",\n  print_screen: \"PrintScreen\",\n  quote: \"Quote\",\n  ralt: \"AltRight\",\n  rctrl: \"ControlRight\",\n  right: \"ArrowRight\",\n  rightbracket: \"BracketRight\",\n  // is this right?\n  rshift: \"ShiftRight\",\n  scroll_lock: \"ScrollLock\",\n  semicolon: \"Semicolon\",\n  shift: \"ShiftLeft\",\n  slash: \"Slash\",\n  space: \"Space\",\n  subtract: \"NumpadSubtract\",\n  // is this right?\n  tab: \"Tab\",\n  tilde: \"\",\n  // what's this?\n  up: \"ArrowUp\"\n};\nfunction getEmscriptenModuleOverrides(overrides) {\n  let resolveRunDependenciesPromise;\n  const runDependenciesPromise = new Promise((resolve) => {\n    resolveRunDependenciesPromise = resolve;\n  });\n  const emscriptenModuleOverrides = {\n    noExitRuntime: false,\n    noInitialRun: true,\n    locateFile(file) {\n      return file;\n    },\n    // the return value of `monitorRunDependencies` seems to be misused here, but it works for now\n    async monitorRunDependencies(left) {\n      if (left === 0) {\n        resolveRunDependenciesPromise();\n      }\n      return await runDependenciesPromise;\n    },\n    print(...args) {\n      console.info(...args);\n    },\n    printErr(...args) {\n      console.error(...args);\n    },\n    // @ts-expect-error do not throw error when exit\n    quit(status, toThrow) {\n      if (status) {\n        console.info(status, toThrow);\n      }\n    },\n    ...overrides\n  };\n  return emscriptenModuleOverrides;\n}\nconst { ini: ini$1, path: path$1 } = vendors;\nconst userdataDirectory = \"/home/web_user/retroarch/userdata\";\nconst bundleDirectory = \"/home/web_user/retroarch/bundle\";\nconst contentDirectory = path$1.join(userdataDirectory, \"content\");\nconst systemDirectory = path$1.join(userdataDirectory, \"system\");\nconst configDirectory = path$1.join(userdataDirectory, \"config\");\nconst screenshotsDirectory = path$1.join(userdataDirectory, \"screenshots\");\nconst shaderDirectory = path$1.join(bundleDirectory, \"shaders\", \"shaders_glsl\");\nconst shaderAssetsDirectory = path$1.join(shaderDirectory, \"shaders\");\nconst configPath = path$1.join(userdataDirectory, \"retroarch.cfg\");\nconst coreConfigPath = path$1.join(userdataDirectory, \"retroarch-core-options.cfg\");\nclass EmulatorFileSystem {\n  static bundleDirectory = bundleDirectory;\n  static configDirectory = configDirectory;\n  static configPath = configPath;\n  static contentDirectory = contentDirectory;\n  static coreConfigPath = coreConfigPath;\n  static screenshotsDirectory = screenshotsDirectory;\n  static shaderDirectory = shaderDirectory;\n  static systemDirectory = systemDirectory;\n  static userdataDirectory = userdataDirectory;\n  emscriptenModule;\n  signal;\n  get FS() {\n    return this.emscriptenModule.FS;\n  }\n  constructor({\n    emscriptenModule,\n    signal\n  }) {\n    this.emscriptenModule = emscriptenModule;\n    this.signal = signal;\n  }\n  static async create(...args) {\n    const emulatorFileSystem = new EmulatorFileSystem(...args);\n    await emulatorFileSystem.prepare();\n    return emulatorFileSystem;\n  }\n  mkdirTree(directory) {\n    const { FS } = this;\n    FS.mkdirTree(directory);\n  }\n  readFile(path2, encoding = \"utf8\") {\n    const { FS } = this;\n    return FS.readFile(path2, { encoding });\n  }\n  unlink(path2) {\n    const { FS } = this;\n    try {\n      FS.unlink(path2);\n    } catch {\n    }\n  }\n  async waitForFile(fileName) {\n    const maxRetries = 30;\n    let buffer;\n    let isFinished = false;\n    let retryTimes = 0;\n    while (retryTimes <= maxRetries && !isFinished) {\n      const delayTime = Math.min(100 * 2 ** retryTimes, 1e3);\n      await delay(delayTime);\n      checkIsAborted(this.signal);\n      try {\n        const newBuffer = this.readFile(fileName, \"binary\").buffer;\n        if (buffer) {\n          isFinished = buffer.byteLength > 0 && buffer.byteLength === newBuffer.byteLength;\n        }\n        buffer = newBuffer;\n      } catch (error) {\n        console.warn(error);\n      }\n      retryTimes += 1;\n    }\n    if (!(isFinished && buffer)) {\n      throw new Error(\"fs timeout\");\n    }\n    return buffer;\n  }\n  async writeFile(filePath, fileContent) {\n    const { FS } = this;\n    const directory = path$1.dirname(filePath);\n    const fileName = path$1.basename(filePath);\n    const resolvable = await ResolvableFile.create(fileContent);\n    const buffer = await resolvable.getUint8Array();\n    FS.createDataFile(\"/\", fileName, buffer, true, false);\n    const encoding = \"binary\";\n    const data = this.readFile(fileName, encoding);\n    this.mkdirTree(directory);\n    FS.writeFile(filePath, data, { encoding });\n    this.unlink(fileName);\n  }\n  async writeIni(path2, config) {\n    if (!config) {\n      return;\n    }\n    const clonedConfig = {};\n    for (const key in config) {\n      clonedConfig[key] = `__${config[key]}__`;\n    }\n    const fileContent = ini$1.stringify(clonedConfig, { platform: \"linux\", whitespace: true }).replaceAll(\"__\", '\"');\n    await this.writeFile(path2, fileContent);\n  }\n  async prepare() {\n    const directories = [configDirectory, contentDirectory, shaderDirectory, shaderAssetsDirectory, systemDirectory];\n    for (const directory of directories) {\n      this.mkdirTree(directory);\n    }\n    const maxWaitTime = 100;\n    let waitTime = 0;\n    while (!this.emscriptenModule.asm && waitTime < maxWaitTime) {\n      await delay(10);\n      checkIsAborted(this.signal);\n      waitTime += 5;\n    }\n  }\n}\nconst { ini, path } = vendors;\nclass Emulator {\n  canvasInitialSize = { height: 0, width: 0 };\n  emscripten;\n  eventListeners = {\n    beforeLaunch: [],\n    onLaunch: []\n  };\n  fileSystem;\n  gameStatus = \"initial\";\n  messageQueue = [];\n  options;\n  get coreFullName() {\n    const { core } = this.options;\n    const coreFullName = coreInfoMap[core.name].corename || core.name;\n    if (!coreFullName) {\n      throw new Error(`invalid core name: ${core.name}`);\n    }\n    return coreFullName;\n  }\n  get fs() {\n    if (!this.fileSystem) {\n      throw new Error(\"fileSystem is not ready\");\n    }\n    return this.fileSystem;\n  }\n  get romBaseName() {\n    const {\n      rom: [{ baseName }]\n    } = this.options;\n    return baseName;\n  }\n  get sramFileDirectory() {\n    return path.join(EmulatorFileSystem.userdataDirectory, \"saves\", this.coreFullName);\n  }\n  get sramFilePath() {\n    return path.join(this.sramFileDirectory, `${this.romBaseName}.srm`);\n  }\n  get stateFileDirectory() {\n    return path.join(EmulatorFileSystem.userdataDirectory, \"states\", this.coreFullName);\n  }\n  get stateFilePath() {\n    return path.join(this.stateFileDirectory, `${this.romBaseName}.state`);\n  }\n  get stateThumbnailFilePath() {\n    return `${this.stateFilePath}.png`;\n  }\n  constructor(options) {\n    this.options = options;\n  }\n  callCommand(command) {\n    const { Module } = this.getEmscripten();\n    Module[command]?.();\n  }\n  exit(statusCode = 0) {\n    try {\n      const { exit, JSEvents } = this.getEmscripten();\n      exit(statusCode);\n      JSEvents.removeAllEventListeners();\n    } catch {\n    }\n    uninstallSetImmediatePolyfill();\n    this.gameStatus = \"terminated\";\n  }\n  getEmscripten() {\n    if (!this.emscripten) {\n      throw new Error(\"emulator is not ready\");\n    }\n    return this.emscripten;\n  }\n  getOptions() {\n    return this.options;\n  }\n  getStatus() {\n    return this.gameStatus;\n  }\n  async launch() {\n    const { element, respondToGlobalEvents, signal, style, waitForInteraction } = this.options;\n    updateStyle(element, style);\n    const removeProperty = element.style.removeProperty.bind(element.style);\n    element.style.removeProperty = (property) => {\n      if (property !== \"width\" && property !== \"height\") {\n        return removeProperty(property);\n      }\n      return element.style[property];\n    };\n    if (!element.isConnected) {\n      document.body.append(element);\n      signal?.addEventListener(\"abort\", () => {\n        element?.remove();\n      });\n    }\n    this.canvasInitialSize = this.getElementSize();\n    if (respondToGlobalEvents === false) {\n      if (!element.tabIndex || element.tabIndex === -1) {\n        element.tabIndex = 0;\n      }\n      const { activeElement } = document;\n      element.focus();\n      signal?.addEventListener(\"abort\", () => {\n        if (activeElement instanceof HTMLElement) {\n          activeElement.focus();\n        }\n      });\n    }\n    await this.runEventListeners(\"beforeLaunch\");\n    if (waitForInteraction) {\n      waitForInteraction({\n        done: async () => {\n          this.runMain();\n          await this.runEventListeners(\"onLaunch\");\n        }\n      });\n    } else {\n      this.runMain();\n      await this.runEventListeners(\"onLaunch\");\n    }\n  }\n  async loadState(state) {\n    this.clearStateFile();\n    await this.fs.writeFile(this.stateFilePath, state);\n    await this.fs.waitForFile(this.stateFilePath);\n    this.sendCommand(\"LOAD_STATE\");\n  }\n  on(event, callback) {\n    this.eventListeners[event].push(callback);\n    return this;\n  }\n  pause() {\n    if (this.gameStatus === \"running\") {\n      this.sendCommand(\"PAUSE_TOGGLE\");\n    }\n    this.gameStatus = \"paused\";\n  }\n  async press(button, player = 1, time = 100) {\n    const code = this.getKeyboardCode(button, player);\n    if (code) {\n      await this.keyboardPress(code, time);\n    }\n  }\n  pressDown(button, player = 1) {\n    const code = this.getKeyboardCode(button, player);\n    if (code) {\n      this.keyboardDown(code);\n    }\n  }\n  pressUp(button, player = 1) {\n    const code = this.getKeyboardCode(button, player);\n    if (code) {\n      this.keyboardUp(code);\n    }\n  }\n  resize({ height, width }) {\n    const { Module } = this.getEmscripten();\n    if (typeof width === \"number\" && typeof height === \"number\") {\n      Module.setCanvasSize(width, height);\n    }\n  }\n  restart() {\n    this.sendCommand(\"RESET\");\n    this.resume();\n  }\n  resume() {\n    if (this.gameStatus === \"paused\") {\n      this.sendCommand(\"PAUSE_TOGGLE\");\n    }\n    this.gameStatus = \"running\";\n  }\n  async saveSRAM() {\n    this.fs.unlink(this.sramFilePath);\n    this.callCommand(\"_cmd_savefiles\");\n    const buffer = await this.fs.waitForFile(this.sramFilePath);\n    const blob = new Blob([buffer], { type: \"application/octet-stream\" });\n    return blob;\n  }\n  async saveState() {\n    this.clearStateFile();\n    this.sendCommand(\"SAVE_STATE\");\n    const savestateThumbnailEnable = this.options.retroarchConfig.savestate_thumbnail_enable;\n    let stateBuffer;\n    let stateThumbnailBuffer;\n    if (savestateThumbnailEnable) {\n      [stateBuffer, stateThumbnailBuffer] = await Promise.all([\n        this.fs.waitForFile(this.stateFilePath),\n        this.fs.waitForFile(this.stateThumbnailFilePath)\n      ]);\n    } else {\n      stateBuffer = await this.fs.waitForFile(this.stateFilePath);\n    }\n    this.clearStateFile();\n    const state = new Blob([stateBuffer], { type: \"application/octet-stream\" });\n    const thumbnail = stateThumbnailBuffer ? new Blob([stateThumbnailBuffer], { type: \"image/png\" }) : void 0;\n    return { state, thumbnail };\n  }\n  async screenshot() {\n    this.sendCommand(\"SCREENSHOT\");\n    const screenshotFileName = this.guessScreenshotFileName();\n    const screenshotPath = path.join(EmulatorFileSystem.screenshotsDirectory, screenshotFileName);\n    const buffer = await this.fs.waitForFile(screenshotPath);\n    this.fs.unlink(screenshotPath);\n    return new Blob([buffer], { type: \"image/png\" });\n  }\n  sendCommand(msg) {\n    const bytes = textEncoder.encode(`${msg}\n`);\n    this.messageQueue.push([bytes, 0]);\n  }\n  async setup() {\n    await this.setupEmscripten();\n    await this.setupFileSystem();\n  }\n  clearStateFile() {\n    try {\n      this.fs.unlink(this.stateFilePath);\n      this.fs.unlink(this.stateThumbnailFilePath);\n    } catch {\n    }\n  }\n  fireKeyboardEvent(type, code) {\n    const { JSEvents } = this.getEmscripten();\n    for (const { eventListenerFunc, eventTypeString } of JSEvents.eventHandlers) {\n      if (eventTypeString === type) {\n        try {\n          eventListenerFunc({ code, target: this.options.element });\n        } catch {\n        }\n      }\n    }\n  }\n  getCurrentRetroarchConfig() {\n    const configContent = this.fs.readFile(EmulatorFileSystem.configPath);\n    return ini.parse(configContent);\n  }\n  getElementSize() {\n    const { element, size } = this.options;\n    return !size || size === \"auto\" ? { height: element.offsetHeight, width: element.offsetWidth } : size;\n  }\n  getKeyboardCode(button, player = 1) {\n    const config = this.getCurrentRetroarchConfig();\n    const configName = `input_player${player}_${button}`;\n    const key = config[configName];\n    if (!key || key === \"nul\") {\n      return;\n    }\n    const { length } = key;\n    if (length === 1) {\n      return `Key${key.toUpperCase()}`;\n    }\n    if (key[0] === \"f\" && (length === 2 || length === 3)) {\n      return key.toUpperCase();\n    }\n    if (length === 4 && key.startsWith(\"num\")) {\n      return `Numpad${key.at(-1)}`;\n    }\n    if (length === 7 && key.startsWith(\"keypad\")) {\n      return `Digit${key.at(-1)}`;\n    }\n    return keyboardCodeMap[key] || \"\";\n  }\n  guessScreenshotFileName() {\n    const date = /* @__PURE__ */ new Date();\n    const year = date.getFullYear() % 1e3;\n    const month = padZero(date.getMonth() + 1);\n    const day = padZero(date.getDate());\n    const hour = padZero(date.getHours());\n    const minute = padZero(date.getMinutes());\n    const second = padZero(date.getSeconds());\n    const dateString = `${year}${month}${day}-${hour}${minute}${second}`;\n    const baseName = this.romBaseName;\n    return `${baseName}-${dateString}.png`;\n  }\n  keyboardDown(code) {\n    this.fireKeyboardEvent(\"keydown\", code);\n  }\n  async keyboardPress(code, time = 100) {\n    this.keyboardDown(code);\n    await delay(time);\n    this.keyboardUp(code);\n  }\n  keyboardUp(code) {\n    this.fireKeyboardEvent(\"keyup\", code);\n  }\n  postRun() {\n    this.resize(this.canvasInitialSize);\n    for (const gamepad of navigator.getGamepads?.() ?? []) {\n      if (gamepad) {\n        globalThis.dispatchEvent(new GamepadEvent(\"gamepadconnected\", { gamepad }));\n      }\n    }\n    this.updateKeyboardEventHandlers();\n  }\n  async runEventListeners(event) {\n    const { [event]: eventListeners } = this.eventListeners;\n    for (const eventListener of eventListeners) {\n      await eventListener();\n    }\n  }\n  runMain() {\n    checkIsAborted(this.options.signal);\n    const { Module } = this.getEmscripten();\n    const { arguments: raArgs = [] } = Module;\n    const { rom, signal } = this.options;\n    if (!Module.arguments && rom.length > 0) {\n      const [{ name }] = rom;\n      raArgs.push(path.join(EmulatorFileSystem.contentDirectory, name));\n    }\n    raArgs.push(\"-c\", EmulatorFileSystem.configPath);\n    installSetImmediatePolyfill();\n    Module.callMain(raArgs);\n    signal?.addEventListener(\"abort\", () => {\n      this.exit();\n    });\n    this.gameStatus = \"running\";\n    this.postRun();\n  }\n  async setupEmscripten() {\n    const { core, element, emscriptenModule } = this.options;\n    const { wasm } = core;\n    const moduleOptions = { canvas: element, preRun: [], wasmBinary: await wasm.getArrayBuffer(), ...emscriptenModule };\n    const initialModule = getEmscriptenModuleOverrides(moduleOptions);\n    initialModule.preRun?.push(() => initialModule.FS.init(() => this.stdin()));\n    const { getEmscripten } = await importCoreJsAsESM(core);\n    checkIsAborted(this.options.signal);\n    const emscripten = await getEmscripten({ Module: initialModule });\n    checkIsAborted(this.options.signal);\n    this.emscripten = emscripten;\n    const { Module } = emscripten;\n    await Module.monitorRunDependencies();\n    checkIsAborted(this.options.signal);\n  }\n  async setupFileSystem() {\n    const { Module } = this.getEmscripten();\n    const { bios, rom, signal, sram, state } = this.options;\n    for (const { name } of bios) {\n      if (!name) {\n        throw new Error(\"file name is required for bios\");\n      }\n    }\n    const fileSystem = await EmulatorFileSystem.create({ emscriptenModule: Module, signal });\n    this.fileSystem = fileSystem;\n    if (state) {\n      this.fs.mkdirTree(this.stateFileDirectory);\n    }\n    if (sram) {\n      this.fs.mkdirTree(this.sramFileDirectory);\n    }\n    const filePromises = [];\n    filePromises.push(\n      ...rom.map((file) => this.fs.writeFile(path.join(EmulatorFileSystem.contentDirectory, file.name), file)),\n      ...bios.map((file) => this.fs.writeFile(path.join(EmulatorFileSystem.systemDirectory, file.name), file))\n    );\n    if (state) {\n      filePromises.push(this.fs.writeFile(`${this.stateFilePath}.auto`, state));\n    }\n    if (sram) {\n      filePromises.push(this.fs.writeFile(this.sramFilePath, sram));\n    }\n    await Promise.all(filePromises);\n    checkIsAborted(signal);\n    await this.setupRaConfigFiles();\n    checkIsAborted(this.options.signal);\n  }\n  async setupRaConfigFiles() {\n    await this.fs.writeIni(EmulatorFileSystem.configPath, this.options.retroarchConfig);\n    await this.fs.writeIni(EmulatorFileSystem.coreConfigPath, this.options.retroarchCoreConfig);\n    await this.setupRaShaderFiles();\n  }\n  async setupRaShaderFiles() {\n    const { shader } = this.options;\n    if (shader.length === 0) {\n      return;\n    }\n    const glslpFiles = shader.filter((file) => file.name.endsWith(\".glslp\"));\n    if (glslpFiles.length === 0) {\n      return;\n    }\n    for (const { name } of shader) {\n      if (!name) {\n        throw new Error(\"file name is required for shader\");\n      }\n    }\n    const globalGlslpContent = glslpFiles.map((file) => `#reference \"${path.join(EmulatorFileSystem.shaderDirectory, file.name)}\"`).join(\"\\n\");\n    await this.fs.writeFile(path.join(EmulatorFileSystem.configDirectory, \"global.glslp\"), globalGlslpContent);\n    await Promise.all(\n      shader.map(async (resolvable) => {\n        const directory = resolvable.extension === \".glslp\" ? EmulatorFileSystem.shaderDirectory : path.join(EmulatorFileSystem.shaderDirectory, \"shaders\");\n        await this.fs.writeFile(path.join(directory, resolvable.name), resolvable);\n      })\n    );\n  }\n  // copied from https://github.com/libretro/RetroArch/pull/15017\n  stdin() {\n    const { messageQueue } = this;\n    while (messageQueue.length > 0) {\n      const msg = messageQueue[0][0];\n      const index = messageQueue[0][1];\n      if (index >= msg.length) {\n        messageQueue.shift();\n      } else {\n        messageQueue[0][1] = index + 1;\n        return msg[index];\n      }\n    }\n    return null;\n  }\n  updateKeyboardEventHandlers() {\n    const { JSEvents } = this.getEmscripten();\n    const { element, respondToGlobalEvents } = this.options;\n    if (!respondToGlobalEvents) {\n      if (!element.getAttribute(\"tabindex\")) {\n        element.tabIndex = -1;\n      }\n      element.focus();\n      element.addEventListener(\"click\", () => {\n        element.focus();\n      });\n    }\n    const keyboardEvents = /* @__PURE__ */ new Set([\"keydown\", \"keypress\", \"keyup\"]);\n    const globalKeyboardEventHandlers = JSEvents.eventHandlers.filter(\n      ({ eventTypeString, target }) => keyboardEvents.has(eventTypeString) && (target === document || target === element)\n    );\n    for (const globalKeyboardEventHandler of globalKeyboardEventHandlers) {\n      const { eventTypeString, handlerFunc, target } = globalKeyboardEventHandler;\n      JSEvents.registerOrRemoveHandler({ eventTypeString, target });\n      JSEvents.registerOrRemoveHandler({\n        ...globalKeyboardEventHandler,\n        handlerFunc: (...args) => {\n          const [event] = args;\n          if (respondToGlobalEvents || event?.target === element) {\n            handlerFunc(...args);\n          }\n        },\n        target: respondToGlobalEvents ? document : element\n      });\n    }\n  }\n}\nclass Nostalgist {\n  static Nostalgist = Nostalgist;\n  static vendors = vendors;\n  emulator;\n  emulatorOptions;\n  options;\n  constructor(options) {\n    const mergedOptions = {};\n    merge(mergedOptions, getGlobalOptions(), options);\n    this.options = mergedOptions;\n  }\n  static clearCache() {\n    EmulatorOptions.resetCacheStore();\n  }\n  /**\n   * Update the global options for `Nostalgist`, so everytime the `Nostalgist.launch` method or shortcuts like `Nostalgist.nes` is called, the default options specified here will be used.\n   *\n   * You may want to specify how to resolve ROMs and RetroArch cores here.\n   *\n   * @see {@link https://nostalgist.js.org/apis/configure/}\n   *\n   * @example\n   * ```js\n   * Nostalgist.configure({\n   *   resolveRom({ file }) {\n   *     return `https://example.com/roms/${file}`\n   *   },\n   *   // other configuation can also be specified here\n   * })\n   * ```\n   */\n  static configure(options) {\n    updateGlobalOptions(options);\n  }\n  /**\n   * A shortcut method for Nostalgist.launch method, with some additional default options for GB emulation.\n   *\n   * It will use mgba as the default core for emulation.\n   *\n   * @see {@link https://nostalgist.js.org/apis/gb/}\n   */\n  static async gb(options) {\n    return await Nostalgist.launchSystem(\"gb\", options);\n  }\n  /**\n   * A shortcut method for Nostalgist.launch method, with some additional default options for GBA emulation.\n   *\n   * It will use mgba as the default core for emulation.\n   *\n   * @see {@link https://nostalgist.js.org/apis/gba/}\n   */\n  static async gba(options) {\n    return await Nostalgist.launchSystem(\"gba\", options);\n  }\n  /**\n   * A shortcut method for Nostalgist.launch method, with some additional default options for GBC emulation.\n   *\n   * It will use mgba as the default core for emulation.\n   *\n   * @see {@link https://nostalgist.js.org/apis/gbc/}\n   */\n  static async gbc(options) {\n    return await Nostalgist.launchSystem(\"gbc\", options);\n  }\n  /**\n   * Launch an emulator and return a `Promise` of the instance of the emulator.\n   *\n   * @see {@link https://nostalgist.js.org/apis/launch/}\n   *\n   * @example\n   * A simple example:\n   * ```js\n   * const nostalgist = await Nostalgist.launch({\n   *   core: 'fceumm',\n   *   rom: 'flappybird.nes',\n   * })\n   * ```\n   *\n   * @example\n   * A more complex one:\n   * ```js\n   * const nostalgist = await Nostalgist.launch({\n   *   element: document.querySelector('.emulator-canvas'),\n   *   core: 'fbneo',\n   *   rom: ['mslug.zip'],\n   *   bios: ['neogeo.zip'],\n   *   retroarchConfig: {\n   *     rewind_enable: true,\n   *     savestate_thumbnail_enable: true,\n   *   }\n   *   runEmulatorManually: false,\n   *   resolveCoreJs(core) {\n   *     return `https://example.com/core/${core}_libretro.js`\n   *   },\n   *   resolveCoreWasm(core) {\n   *     return `https://example.com/core/${core}_libretro.wasm`\n   *   },\n   *   resolveRom(file) {\n   *     return `https://example.com/roms/${file}`\n   *   },\n   *   resolveBios(bios) {\n   *     return `https://example.com/system/${bios}`\n   *   },\n   * })\n   * ```\n   */\n  static async launch(options) {\n    const nostalgist = new Nostalgist(options);\n    await nostalgist.load();\n    return nostalgist;\n  }\n  /**\n   * A shortcut method for Nostalgist.launch method, with some additional default options for Sega Genesis / Megadrive emulation.\n   *\n   * It will use genesis_plus_gx as the default core for emulation.\n   *\n   * @see {@link https://nostalgist.js.org/apis/megadrive/}\n   */\n  static async megadrive(options) {\n    return await Nostalgist.launchSystem(\"megadrive\", options);\n  }\n  /**\n   * A shortcut method for Nostalgist.launch method, with some additional default options for NES emulation.\n   *\n   * It will use fceumm as the default core for emulation.\n   *\n   * @see {@link https://nostalgist.js.org/apis/nes/}\n   */\n  static async nes(options) {\n    return await Nostalgist.launchSystem(\"nes\", options);\n  }\n  static async prepare(options) {\n    const nostalgist = new Nostalgist({ ...options, runEmulatorManually: true });\n    await nostalgist.load();\n    return nostalgist;\n  }\n  /**\n   * Reset the global configuation set by `Nostalgist.configure` to default.\n   *\n   * @see {@link https://nostalgist.js.org/apis/reset-to-default/}\n   */\n  static resetToDefault() {\n    resetGlobalOptions();\n  }\n  /**\n   * A shortcut method for Nostalgist.launch method, with some additional default options for SNES emulation.\n   *\n   * It will use snes9x as the default core for emulation.\n   *\n   * @see {@link https://nostalgist.js.org/apis/snes/}\n   */\n  static async snes(options) {\n    return await Nostalgist.launchSystem(\"snes\", options);\n  }\n  static async launchSystem(system, options) {\n    const optionsResult = await getResult(options);\n    const launchOptions = isResolvableFileInput(optionsResult) ? { rom: optionsResult } : optionsResult;\n    return await Nostalgist.launch({ ...launchOptions, core: systemCoreMap[system] });\n  }\n  /**\n   * Exit the current running game and the emulator. Remove the canvas element used by the emulator if needed.\n   *\n   * @see {@link https://nostalgist.js.org/apis/exit/}\n   *\n   * @example\n   * ```js\n   * const nostalgist = await Nostalgist.nes('flappybird.nes')\n   *\n   * nostalgist.exit()\n   * ```\n   * ```js\n   * const nostalgist = await Nostalgist.nes('flappybird.nes')\n   *\n   * // the canvas element will not be removed\n   * nostalgist.exit({ removeCanvas: false })\n   * ```\n   */\n  exit({ removeCanvas = true } = {}) {\n    this.getEmulator().exit();\n    if (removeCanvas) {\n      this.getCanvas().remove();\n    }\n  }\n  /**\n   * Get the canvas DOM element that the current emulator is using.\n   *\n   * @see {@link https://nostalgist.js.org/apis/get-canvas/}\n   */\n  getCanvas() {\n    return this.getEmulatorOptions().element;\n  }\n  /**\n   * Get the Emscripten object exposed by RetroArch.\n   *\n   * @see {@link https://nostalgist.js.org/apis/get-emscripten-module/}\n   */\n  getEmscripten() {\n    const emulator = this.getEmulator();\n    return emulator.getEmscripten();\n  }\n  /**\n   * Get the Emscripten AL object exposed by RetroArch.\n   *\n   * @see {@link https://nostalgist.js.org/apis/get-emscripten-module/}\n   */\n  getEmscriptenAL() {\n    const emulator = this.getEmulator();\n    return emulator.getEmscripten().AL;\n  }\n  /**\n   * Get the Emscripten FS object of the current running emulator.\n   *\n   * @see {@link https://nostalgist.js.org/apis/get-emscripten-fs/}\n   */\n  getEmscriptenFS() {\n    const emulator = this.getEmulator();\n    const emscripten = emulator.getEmscripten();\n    return emscripten.Module.FS;\n  }\n  /**\n   * Get the Emscripten Module object of the current running emulator.\n   *\n   * @see {@link https://nostalgist.js.org/apis/get-emscripten-module/}\n   */\n  getEmscriptenModule() {\n    const emulator = this.getEmulator();\n    const emscripten = emulator.getEmscripten();\n    return emscripten.Module;\n  }\n  getEmulator() {\n    const { emulator } = this;\n    if (!emulator) {\n      throw new Error(\"emulator is not ready\");\n    }\n    return emulator;\n  }\n  getEmulatorOptions() {\n    if (!this.emulatorOptions) {\n      throw new Error(\"emulator options are not ready\");\n    }\n    return this.emulatorOptions;\n  }\n  getOptions() {\n    return this.options;\n  }\n  /**\n     * Get the status of current emulation.\n     *\n     * @see {@link https://nostalgist.js.org/apis/get-status/}\n     *\n     * @returns One of 'initial' | 'paused' | 'running' | 'terminated'\n     * @example\n     * ```js\n     * const nostalgist = await Nostalgist.prepare('flappybird.nes')\n     * console.log(nostalgist.getStatus()) // 'initial'\n  \n     * await nostalgist.launch()\n     * console.log(nostalgist.getStatus()) // 'running'\n  \n     * await nostalgist.pause()\n     * console.log(nostalgist.getStatus()) // 'paused'\n  \n     * nostalgist.exit()\n     * console.log(nostalgist.getStatus()) // 'terminated'\n     * ```\n     */\n  getStatus() {\n    return this.getEmulator().getStatus();\n  }\n  /**\n   * Launch the emulator, if it's not launched, because of the launch option `runEmulatorManually` being set to `true`.\n   * @deprecated Use the `start` method instead.\n   * @see {@link https://nostalgist.js.org/apis/launch-emulator/}\n   */\n  async launchEmulator() {\n    return await this.start();\n  }\n  /**\n   * Load a state for the current running emulator and game.\n   *\n   * @see {@link https://nostalgist.js.org/apis/load-state/}\n   *\n   * @example\n   * ```js\n   * const nostalgist = await Nostalgist.nes('flappybird.nes')\n   *\n   * // save the state\n   * const { state } = await nostalgist.saveState()\n   *\n   * // load the state\n   * await nostalgist.loadState(state)\n   * ```\n   */\n  async loadState(state) {\n    const resolvable = await ResolvableFile.create(state);\n    await this.getEmulator().loadState(resolvable);\n  }\n  /**\n   * Pause the current running game.\n   *\n   * @see {@link https://nostalgist.js.org/apis/pause/}\n   *\n   * @example\n   * ```js\n   * const nostalgist = await Nostalgist.nes('flappybird.nes')\n   *\n   * nostalgist.pause()\n   * ```\n   */\n  pause() {\n    this.getEmulator().pause();\n  }\n  /**\n   * Press a button and then release it programmatically. Analog Joysticks are not supported by now.\n   *\n   * @see {@link https://nostalgist.js.org/apis/press/}\n   *\n   * @example\n   * ```js\n   * const nostalgist = await Nostalgist.nes('flappybird.nes')\n   *\n   * await nostalgist.press('start')\n   * ```\n   */\n  async press(options) {\n    const emulator = this.getEmulator();\n    await (typeof options === \"string\" ? emulator.press(options) : emulator.press(options.button, options.player, options.time));\n  }\n  /**\n   * Press a button programmatically. Analog Joysticks are not supported by now.\n   *\n   * @see {@link https://nostalgist.js.org/apis/press-down/}\n   *\n   * @example\n   * ```js\n   * const nostalgist = await Nostalgist.nes('flappybird.nes')\n   *\n   * nostalgist.pressDown('start')\n   * ```\n   */\n  pressDown(options) {\n    const emulator = this.getEmulator();\n    if (typeof options === \"string\") {\n      return emulator.pressDown(options);\n    }\n    return emulator.pressDown(options.button, options.player);\n  }\n  /**\n   * Release it programmatically. Analog Joysticks are not supported by now.\n   *\n   * @see {@link https://nostalgist.js.org/apis/press-up/}\n   *\n   * @example\n   * ```js\n   * const nostalgist = await Nostalgist.nes('flappybird.nes')\n   *\n   * nostalgist.pressUp('start')\n   * ```\n   */\n  pressUp(options) {\n    const emulator = this.getEmulator();\n    if (typeof options === \"string\") {\n      return emulator.pressUp(options);\n    }\n    return emulator.pressUp(options.button, options.player);\n  }\n  /**\n   * Resize the canvas element of the emulator.\n   *\n   * @see {@link https://nostalgist.js.org/apis/resize/}\n   *\n   * @example\n   * ```js\n   * const nostalgist = await Nostalgist.nes('flappybird.nes')\n   *\n   * nostalgist.resize({ width: 1000, height: 800 })\n   * ```\n   */\n  resize(size) {\n    return this.getEmulator().resize(size);\n  }\n  /**\n   * Restart the current running game.\n   *\n   * @see {@link https://nostalgist.js.org/apis/restart/}\n   *\n   * @example\n   * ```js\n   * const nostalgist = await Nostalgist.nes('flappybird.nes')\n   *\n   * nostalgist.restart()\n   * ```\n   */\n  restart() {\n    this.getEmulator().restart();\n  }\n  /**\n   * Resume the current running game, if it has been paused by `pause`.\n   *\n   * @see {@link https://nostalgist.js.org/apis/resume/}\n   *\n   * @example\n   * ```js\n   * const nostalgist = await Nostalgist.nes('flappybird.nes')\n   *\n   * nostalgist.pause()\n   * await new Promise(resolve => setTimeout(resolve, 1000))\n   * nostalgist.resume()\n   * ```\n   */\n  resume() {\n    this.getEmulator().resume();\n  }\n  /**\n   * Save the SRAM of the current running game.\n   *\n   * @see {@link https://nostalgist.js.org/apis/save-sram/}\n   *\n   * @example\n   * ```js\n   * const nostalgist = await Nostalgist.nes('flappybird.nes')\n   *\n   * const sram = await nostalgist.saveSRAM()\n   * ```\n   */\n  async saveSRAM() {\n    const emulator = this.getEmulator();\n    return await emulator.saveSRAM();\n  }\n  /**\n   * Save the state of the current running game.\n   *\n   * @see {@link https://nostalgist.js.org/apis/save-state/}\n   *\n   * @example\n   * ```js\n   * const nostalgist = await Nostalgist.nes('flappybird.nes')\n   *\n   * // save the state\n   * const { state } = await nostalgist.saveState()\n   *\n   * // load the state\n   * await nostalgist.loadState(state)\n   * ```\n   * @returns\n   * A Promise of the state of the current running game.\n   *\n   * Its type is like `Promise<{ state: Blob, thumbnail: Blob | undefined }>`.\n   *\n   * If RetroArch is launched with the option `savestate_thumbnail_enable` set to `true`, which is the default value inside Nostalgist.js, then the `thumbnail` will be a `Blob`. Otherwise the `thumbnail` will be `undefined`.\n   */\n  async saveState() {\n    return await this.getEmulator().saveState();\n  }\n  /**\n   * Take a screenshot for the current running game.\n   *\n   * @see {@link https://nostalgist.js.org/apis/screenshot/}\n   *\n   * @example\n   * ```js\n   * const nostalgist = await Nostalgist.nes('flappybird.nes')\n   *\n   * const blob = await nostalgist.screenshot()\n   * ```\n   */\n  async screenshot() {\n    const emulator = this.getEmulator();\n    return await emulator.screenshot();\n  }\n  /**\n   * Send a command to RetroArch.\n   * The commands are listed here: https://docs.libretro.com/development/retroarch/network-control-interface/#commands .\n   * But not all of them are supported inside a browser.\n   *\n   * @see {@link https://nostalgist.js.org/apis/send-command/}\n   *\n   * @example\n   * ```js\n   * const nostalgist = await Nostalgist.nes('flappybird.nes')\n   *\n   * nostalgist.sendCommand('FAST_FORWARD')\n   * ```\n   */\n  sendCommand(command) {\n    const emulator = this.getEmulator();\n    return emulator.sendCommand(command);\n  }\n  /**\n   * Start the emulator if it's not started because of the instance is returned by `Nostalgist.prepare` rather than `Nostalgist.launch`, or the option `runEmulatorManually` for `Nostalgist.launch` being set to `true`.\n   *\n   * @see {@link https://nostalgist.js.org/apis/start/}\n   */\n  async start() {\n    return await this.getEmulator().launch();\n  }\n  /**\n   * Load options and then launch corresponding emulator if should\n   */\n  async load() {\n    this.emulatorOptions = await EmulatorOptions.create(this.options);\n    checkIsAborted(this.options.signal);\n    if (this.options.setupEmulatorManually) {\n      return;\n    }\n    await this.setupEmulator();\n    if (this.options.runEmulatorManually) {\n      return;\n    }\n    await this.start();\n  }\n  async setupEmulator() {\n    const emulatorOptions = this.getEmulatorOptions();\n    this.emulator = new Emulator(emulatorOptions);\n    this.emulator.on(\"onLaunch\", () => this.options.onLaunch?.(this)).on(\"beforeLaunch\", () => this.options.beforeLaunch?.(this));\n    await this.emulator.setup();\n  }\n}\nexport {\n  Nostalgist\n};\n"],
  "mappings": "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",
  "names": []
}
